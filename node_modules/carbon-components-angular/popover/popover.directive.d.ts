/**
 *
 * carbon-angular v0.0.0 | popover.directive.d.ts
 *
 * Copyright 2014, 2023 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter } from "@angular/core";
import * as i0 from "@angular/core";
/**
 * Applies popover container styling to the element it is applied to.
 *
 * [See demo](../../?path=/story/components-popover--basic)
 */
export declare class PopoverContainer {
    get alignmentTopClass(): boolean;
    get alignmentTopLeftClass(): boolean;
    get alignmentTopRightClass(): boolean;
    get alignmentBottomClass(): boolean;
    get alignmentBottomLeftClass(): boolean;
    get alignmentBottomRightClass(): boolean;
    get alignmentLeftClass(): boolean;
    get alignmentLeftTopClass(): boolean;
    get alignmentLeftBottomClass(): boolean;
    get alignmentRightClass(): boolean;
    get alignmentRightTopClass(): boolean;
    get alignmentRightBottomClass(): boolean;
    /**
     * Emits an event when the dialog is closed
     */
    onClose: EventEmitter<Event>;
    /**
     * Emits an event when the dialog is opened
     */
    onOpen: EventEmitter<Event>;
    /**
     * Emits an event when the state of `isOpen` changes. Allows `isOpen` to be double bound
     */
    isOpenChange: EventEmitter<boolean>;
    caret: boolean;
    dropShadow: boolean;
    highContrast: boolean;
    isOpen: boolean;
    containerClass: boolean;
    align: "top" | "top-left" | "top-right" | "bottom" | "bottom-left" | "bottom-right" | "left" | "left-bottom" | "left-top" | "right" | "right-bottom" | "right-top";
    handleChange(open: boolean, event: Event): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PopoverContainer, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PopoverContainer, "[cdsPopover], [ibmPopover]", never, { "caret": "caret"; "dropShadow": "dropShadow"; "highContrast": "highContrast"; "isOpen": "isOpen"; "align": "align"; }, { "onClose": "onClose"; "onOpen": "onOpen"; "isOpenChange": "isOpenChange"; }, never, never, false>;
}
