/**
 *
 * carbon-angular v0.0.0 | experimental.service.d.ts
 *
 * Copyright 2014, 2023 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import * as i0 from "@angular/core";
/**
 * Represents options for an experiment. The only required property is `enabled`, however other options may be supplied.
 */
export interface Experiment {
    enabled: boolean;
    [key: string]: any;
}
export declare class ExperimentalService {
    /**
     * Map to hold all our experiments
     */
    private experiments;
    /**
     * Adds an experiment if it doesn't exist.
     */
    addExperiment(name: string, options?: Experiment): void;
    /**
     * Enables an experiment by name
     * @param name name of the experiment to enable
     */
    enableExperiment(name: string): void;
    /**
     * Disables an experiment by name
     * @param name name of the experiment to disable
     */
    disableExperiment(name: string): void;
    /**
     * Get the options for an experiment by name
     * @param name name of experiment to get
     */
    getExperiment(name: string): Experiment;
    /**
     * Get an array of tuples representing an experiment and it's options
     */
    getExperiments(): Array<[string, Experiment]>;
    static ɵfac: i0.ɵɵFactoryDeclaration<ExperimentalService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ExperimentalService>;
}
