"use strict";(self.webpackChunkcarbon_components_angular=self.webpackChunkcarbon_components_angular||[]).push([[5980],{"./src/select/select.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,NgModel:()=>NgModel,OptionsSelected:()=>OptionsSelected,ReactiveForms:()=>ReactiveForms,ValueProperty:()=>ValueProperty,default:()=>select_stories});var fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),src_select=__webpack_require__("./src/select/index.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let ReactiveFormsSelect=class ReactiveFormsSelect{constructor(formBuilder){this.formBuilder=formBuilder}clearSelection(){this.formGroup.get("selecterino")?.setValue("default")}selectRandom(){this.formGroup.get("selecterino")?.setValue(["default","option1","option2","option3"][Math.floor(4*Math.random())])}ngOnInit(){this.formGroup=this.formBuilder.group({selecterino:new fesm2020_forms.NI}),this.formGroup.get("selecterino")?.setValue("option2")}};ReactiveFormsSelect.ctorParameters=()=>[{type:fesm2020_forms.qu}],ReactiveFormsSelect=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-reactive-form",template:'\n\t\t<form [formGroup]="formGroup">\n\t\t\t<cds-select formControlName="selecterino">\n\t\t\t\t<option value="default" disabled selected hidden>Choose an option</option>\n\t\t\t\t<option value="option1">Option 1</option>\n\t\t\t\t<option value="option2">Option 2</option>\n\t\t\t\t<option value="option3">Option 3</option>\n\t\t\t</cds-select>\n\t\t</form>\n\t\t<div style="display: flex; flex-direction: column; gap: 2rem; margin-top: 2rem">\n\t\t\tselectedValue: {{ formGroup.get("selecterino").value }}\n\t\t\t<div>\n\t\t\t\t<button (click)="clearSelection()">Clear selection</button>\n\t\t\t\t<button (click)="selectRandom()">Select random</button>\n\t\t\t</div>\n\t\t</div>\n\t'})],ReactiveFormsSelect);const select_stories={title:"Components/Select",decorators:[(0,dist.moduleMetadata)({imports:[src_select.An,fesm2020_forms.u5,fesm2020_forms.UX],declarations:[ReactiveFormsSelect]})],args:{skeleton:!1,disabled:!1,invalid:!1,invalidText:"Please select an option.",warn:!1,warnText:"This is a warning!",label:"Select label",helperText:"Optional helper text"},argTypes:{size:{options:["sm","md","lg"],defaultValue:"md",control:"radio"},theme:{options:["light","dark"],defaultValue:"dark",control:"radio"},display:{options:["default","inline"],defaultValue:"on",control:"radio"}},component:src_select.Ph,subcomponents:{Option:src_select.Wx,OptGroup:src_select.Xo}},Basic=(args=>({props:args,template:'\n\t\t<cds-select\n\t\t\t[skeleton]="skeleton"\n\t\t\t[disabled]="disabled"\n\t\t\t[size]="size"\n\t\t\t[invalid]="invalid"\n\t\t\t[invalidText]="invalidText"\n\t\t\t[warn]="warn"\n\t\t\t[warnText]="warnText"\n\t\t\t[label]="label"\n\t\t\t[helperText]="helperText"\n\t\t\t[theme]="theme"\n\t\t\t[(ngModel)]="model"\n\t\t\t[display]="display">\n\t\t\t<option value="default" disabled selected hidden>Choose an option</option>\n\t\t\t<option value="solong">A much longer option that is worth having around to check how text flows</option>\n\t\t\t<optgroup label="Category 1">\n\t\t\t\t<option value="option1">Option 1</option>\n\t\t\t\t<option value="option2">Option 2</option>\n\t\t\t</optgroup>\n\t\t\t<optgroup label="Category 2">\n\t\t\t\t<option value="option1">Option 1</option>\n\t\t\t\t<option value="option2">Option 2</option>\n\t\t\t</optgroup>\n\t\t</cds-select>\n\t'})).bind({});Basic.argTypes={model:{defaultValue:"default",control:!1}};const NgModel=(args=>({props:args,template:'\n\t\t<cds-select\n\t\t\t[(ngModel)]="model"\n\t\t\t[skeleton]="skeleton"\n\t\t\t[disabled]="disabled"\n\t\t\t[size]="size"\n\t\t\t[invalid]="invalid"\n\t\t\t[invalidText]="invalidText"\n\t\t\t[warn]="warn"\n\t\t\t[warnText]="warnText"\n\t\t\t[label]="label"\n\t\t\t[helperText]="helperText"\n\t\t\t[theme]="theme"\n\t\t\t[(ngModel)]="model"\n\t\t\t[display]="display"\n\t\t\tariaLabel=\'ngModel select\'>\n\t\t\t<option value="default" disabled selected hidden>Choose an option</option>\n\t\t\t<option value="option1">Option 1</option>\n\t\t\t<option value="option2">Option 2</option>\n\t\t\t<option value="option3">Option 3</option>\n\t\t</cds-select>\n\t'})).bind({});NgModel.argTypes={model:{defaultValue:"option2",options:["default","option1","option2","option3"],control:"select"}};const ReactiveForms=(args=>({props:args,template:"\n\t\t\x3c!--\n\t\tapp-* components are for demo purposes only.\n\t\tYou can create your own implementation by using the component source found at:\n\t\thttps://github.com/IBM/carbon-components-angular/tree/master/src/select/stories/app-reactive-form.component.ts\n\t\t--\x3e\n\t\t<app-reactive-form></app-reactive-form>\n\t"})).bind({});ReactiveForms.parameters={controls:{disable:!0}};const OptionsSelected=(args=>({props:args,template:'\n\t\t<cds-select label="Type">\n\t\t\t<option\n\t\t\t\tvalue="on-hand"\n\t\t\t\t[selected]="selected === \'on-hand\'">\n\t\t\t\tOn hand\n\t\t\t</option>\n\t\t\t<option\n\t\t\t\tvalue="in-transit-inbound"\n\t\t\t\t[selected]="selected === \'in-transit-inbound\'">\n\t\t\t\tInbound in-transit\n\t\t\t</option>\n\t\t\t<option\n\t\t\t\tvalue="in-transit-outbound"\n\t\t\t\t[selected]="selected === \'in-transit-outbound\'">\n\t\t\t\tOutbound in-transit\n\t\t\t</option>\n\t\t</cds-select>\n\t'})).bind({});OptionsSelected.storyName="Changing selected through option selected property",OptionsSelected.args={selected:"in-transit-inbound"},OptionsSelected.argTypes={selected:{options:["on-hand","in-transit-inbound","in-transit-outbound"],control:"select"}};const ValueProperty=(args=>({props:args,template:'\n\t\t<cds-select label="Type" [value]="selected">\n\t\t\t<option value="on-hand">On hand</option>\n\t\t\t<option value="in-transit-inbound">Inbound in-transit</option>\n\t\t\t<option value="in-transit-outbound">Outbound in-transit</option>\n\t\t</cds-select>\n\t'})).bind({});ValueProperty.storyName="Changing selected through value property",ValueProperty.args={selected:"in-transit-outbound"},ValueProperty.argTypes={selected:{options:["on-hand","in-transit-inbound","in-transit-outbound"],control:"select"}}}}]);