import { NgModule } from "@angular/core";
import { CommonModule } from "@angular/common";
import { UtilsModule } from "carbon-components-angular/utils";
import { I18nModule } from "carbon-components-angular/i18n";
import { TabSkeleton } from "./tab-skeleton.component";
import { BaseTabHeader } from "./base-tab-header.component";
import { Tabs } from "./tabs.component";
import { Tab } from "./tab.component";
import { TabHeader } from "./tab-header.directive";
import { TabHeaders } from "./tab-headers.component";
import { TabHeaderGroup } from "./tab-header-group.component";
import * as i0 from "@angular/core";
export class TabsModule {
}
TabsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TabsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TabsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.3.0", ngImport: i0, type: TabsModule, declarations: [BaseTabHeader,
        Tabs,
        Tab,
        TabHeader,
        TabHeaders,
        TabHeaderGroup,
        TabSkeleton], imports: [CommonModule,
        UtilsModule,
        I18nModule], exports: [Tabs,
        Tab,
        TabHeader,
        TabHeaders,
        TabHeaderGroup,
        TabSkeleton] });
TabsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TabsModule, imports: [CommonModule,
        UtilsModule,
        I18nModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TabsModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        BaseTabHeader,
                        Tabs,
                        Tab,
                        TabHeader,
                        TabHeaders,
                        TabHeaderGroup,
                        TabSkeleton
                    ],
                    exports: [
                        Tabs,
                        Tab,
                        TabHeader,
                        TabHeaders,
                        TabHeaderGroup,
                        TabSkeleton
                    ],
                    imports: [
                        CommonModule,
                        UtilsModule,
                        I18nModule
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdGFicy90YWJzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDOUQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBRTVELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDNUQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3hDLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN0QyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDbkQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3JELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQzs7QUEwQjlELE1BQU0sT0FBTyxVQUFVOzt1R0FBVixVQUFVO3dHQUFWLFVBQVUsaUJBdEJyQixhQUFhO1FBQ2IsSUFBSTtRQUNKLEdBQUc7UUFDSCxTQUFTO1FBQ1QsVUFBVTtRQUNWLGNBQWM7UUFDZCxXQUFXLGFBV1gsWUFBWTtRQUNaLFdBQVc7UUFDWCxVQUFVLGFBVlYsSUFBSTtRQUNKLEdBQUc7UUFDSCxTQUFTO1FBQ1QsVUFBVTtRQUNWLGNBQWM7UUFDZCxXQUFXO3dHQVFBLFVBQVUsWUFMckIsWUFBWTtRQUNaLFdBQVc7UUFDWCxVQUFVOzJGQUdDLFVBQVU7a0JBeEJ0QixRQUFRO21CQUFDO29CQUNULFlBQVksRUFBRTt3QkFDYixhQUFhO3dCQUNiLElBQUk7d0JBQ0osR0FBRzt3QkFDSCxTQUFTO3dCQUNULFVBQVU7d0JBQ1YsY0FBYzt3QkFDZCxXQUFXO3FCQUNYO29CQUNELE9BQU8sRUFBRTt3QkFDUixJQUFJO3dCQUNKLEdBQUc7d0JBQ0gsU0FBUzt3QkFDVCxVQUFVO3dCQUNWLGNBQWM7d0JBQ2QsV0FBVztxQkFDWDtvQkFDRCxPQUFPLEVBQUU7d0JBQ1IsWUFBWTt3QkFDWixXQUFXO3dCQUNYLFVBQVU7cUJBQ1Y7aUJBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uXCI7XG5pbXBvcnQgeyBVdGlsc01vZHVsZSB9IGZyb20gXCJjYXJib24tY29tcG9uZW50cy1hbmd1bGFyL3V0aWxzXCI7XG5pbXBvcnQgeyBJMThuTW9kdWxlIH0gZnJvbSBcImNhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvaTE4blwiO1xuXG5pbXBvcnQgeyBUYWJTa2VsZXRvbiB9IGZyb20gXCIuL3RhYi1za2VsZXRvbi5jb21wb25lbnRcIjtcbmltcG9ydCB7IEJhc2VUYWJIZWFkZXIgfSBmcm9tIFwiLi9iYXNlLXRhYi1oZWFkZXIuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBUYWJzIH0gZnJvbSBcIi4vdGFicy5jb21wb25lbnRcIjtcbmltcG9ydCB7IFRhYiB9IGZyb20gXCIuL3RhYi5jb21wb25lbnRcIjtcbmltcG9ydCB7IFRhYkhlYWRlciB9IGZyb20gXCIuL3RhYi1oZWFkZXIuZGlyZWN0aXZlXCI7XG5pbXBvcnQgeyBUYWJIZWFkZXJzIH0gZnJvbSBcIi4vdGFiLWhlYWRlcnMuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBUYWJIZWFkZXJHcm91cCB9IGZyb20gXCIuL3RhYi1oZWFkZXItZ3JvdXAuY29tcG9uZW50XCI7XG5cbkBOZ01vZHVsZSh7XG5cdGRlY2xhcmF0aW9uczogW1xuXHRcdEJhc2VUYWJIZWFkZXIsXG5cdFx0VGFicyxcblx0XHRUYWIsXG5cdFx0VGFiSGVhZGVyLFxuXHRcdFRhYkhlYWRlcnMsXG5cdFx0VGFiSGVhZGVyR3JvdXAsXG5cdFx0VGFiU2tlbGV0b25cblx0XSxcblx0ZXhwb3J0czogW1xuXHRcdFRhYnMsXG5cdFx0VGFiLFxuXHRcdFRhYkhlYWRlcixcblx0XHRUYWJIZWFkZXJzLFxuXHRcdFRhYkhlYWRlckdyb3VwLFxuXHRcdFRhYlNrZWxldG9uXG5cdF0sXG5cdGltcG9ydHM6IFtcblx0XHRDb21tb25Nb2R1bGUsXG5cdFx0VXRpbHNNb2R1bGUsXG5cdFx0STE4bk1vZHVsZVxuXHRdXG59KVxuZXhwb3J0IGNsYXNzIFRhYnNNb2R1bGUge31cbiJdfQ==