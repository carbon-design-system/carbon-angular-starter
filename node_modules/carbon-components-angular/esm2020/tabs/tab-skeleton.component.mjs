import { Component, HostBinding, Input } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
/**
 * Skeleton component for tabs
 */
export class TabSkeleton {
    constructor() {
        /**
         * Set to `true` to put tabs in a loading state.
         */
        this.skeleton = true;
        this.tabs = true;
        this.numOfSkeletonTabs = new Array(5);
    }
    /**
     * Set number of skeleton tabs to render, default is 5
     */
    set numOftabs(num) {
        this.numOfSkeletonTabs = new Array(num);
    }
}
TabSkeleton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TabSkeleton, deps: [], target: i0.ɵɵFactoryTarget.Component });
TabSkeleton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: TabSkeleton, selector: "cds-tabs-skeleton, ibm-tabs-skeleton", inputs: { numOftabs: "numOftabs" }, host: { properties: { "class.cds--skeleton": "this.skeleton", "class.cds--tabs": "this.tabs" } }, ngImport: i0, template: `
		<ul class="cds--tabs__nav">
			<li
				*ngFor="let i of numOfSkeletonTabs"
				class="cds--tabs__nav-item">
				<div class="cds--tabs__nav-link">
					<span></span>
				</div>
			</li>
		</ul>
	`, isInline: true, dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TabSkeleton, decorators: [{
            type: Component,
            args: [{
                    selector: "cds-tabs-skeleton, ibm-tabs-skeleton",
                    template: `
		<ul class="cds--tabs__nav">
			<li
				*ngFor="let i of numOfSkeletonTabs"
				class="cds--tabs__nav-item">
				<div class="cds--tabs__nav-link">
					<span></span>
				</div>
			</li>
		</ul>
	`
                }]
        }], propDecorators: { numOftabs: [{
                type: Input
            }], skeleton: [{
                type: HostBinding,
                args: ["class.cds--skeleton"]
            }], tabs: [{
                type: HostBinding,
                args: ["class.cds--tabs"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLXNrZWxldG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YWJzL3RhYi1za2VsZXRvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNOLFNBQVMsRUFDVCxXQUFXLEVBQ1gsS0FBSyxFQUNMLE1BQU0sZUFBZSxDQUFDOzs7QUFFdkI7O0dBRUc7QUFlSCxNQUFNLE9BQU8sV0FBVztJQWR4QjtRQXNCQzs7V0FFRztRQUNpQyxhQUFRLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLFNBQUksR0FBRyxJQUFJLENBQUM7UUFDNUMsc0JBQWlCLEdBQUcsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDakM7SUFiQTs7T0FFRztJQUNILElBQWEsU0FBUyxDQUFDLEdBQVc7UUFDakMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3pDLENBQUM7O3dHQU5XLFdBQVc7NEZBQVgsV0FBVyxrTkFaYjs7Ozs7Ozs7OztFQVVUOzJGQUVXLFdBQVc7a0JBZHZCLFNBQVM7bUJBQUM7b0JBQ1YsUUFBUSxFQUFFLHNDQUFzQztvQkFDaEQsUUFBUSxFQUFFOzs7Ozs7Ozs7O0VBVVQ7aUJBQ0Q7OEJBS2EsU0FBUztzQkFBckIsS0FBSztnQkFPOEIsUUFBUTtzQkFBM0MsV0FBVzt1QkFBQyxxQkFBcUI7Z0JBQ0YsSUFBSTtzQkFBbkMsV0FBVzt1QkFBQyxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdEhvc3RCaW5kaW5nLFxuXHRJbnB1dFxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG4vKipcbiAqIFNrZWxldG9uIGNvbXBvbmVudCBmb3IgdGFic1xuICovXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6IFwiY2RzLXRhYnMtc2tlbGV0b24sIGlibS10YWJzLXNrZWxldG9uXCIsXG5cdHRlbXBsYXRlOiBgXG5cdFx0PHVsIGNsYXNzPVwiY2RzLS10YWJzX19uYXZcIj5cblx0XHRcdDxsaVxuXHRcdFx0XHQqbmdGb3I9XCJsZXQgaSBvZiBudW1PZlNrZWxldG9uVGFic1wiXG5cdFx0XHRcdGNsYXNzPVwiY2RzLS10YWJzX19uYXYtaXRlbVwiPlxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiY2RzLS10YWJzX19uYXYtbGlua1wiPlxuXHRcdFx0XHRcdDxzcGFuPjwvc3Bhbj5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQ8L2xpPlxuXHRcdDwvdWw+XG5cdGBcbn0pXG5leHBvcnQgY2xhc3MgVGFiU2tlbGV0b24ge1xuXHQvKipcblx0ICogU2V0IG51bWJlciBvZiBza2VsZXRvbiB0YWJzIHRvIHJlbmRlciwgZGVmYXVsdCBpcyA1XG5cdCAqL1xuXHRASW5wdXQoKSBzZXQgbnVtT2Z0YWJzKG51bTogbnVtYmVyKSB7XG5cdFx0dGhpcy5udW1PZlNrZWxldG9uVGFicyA9IG5ldyBBcnJheShudW0pO1xuXHR9XG5cblx0LyoqXG5cdCAqIFNldCB0byBgdHJ1ZWAgdG8gcHV0IHRhYnMgaW4gYSBsb2FkaW5nIHN0YXRlLlxuXHQgKi9cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuY2RzLS1za2VsZXRvblwiKSBza2VsZXRvbiA9IHRydWU7XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmNkcy0tdGFic1wiKSB0YWJzID0gdHJ1ZTtcblx0bnVtT2ZTa2VsZXRvblRhYnMgPSBuZXcgQXJyYXkoNSk7XG59XG4iXX0=