import { Component, Input } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class TableData {
    constructor() {
        this.skeleton = false;
    }
}
TableData.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TableData, deps: [], target: i0.ɵɵFactoryTarget.Component });
TableData.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: TableData, selector: "[cdsTableData], [ibmTableData]", inputs: { item: "item", skeleton: "skeleton" }, ngImport: i0, template: `
		<ng-container *ngIf="!skeleton && !item.template">{{item.data}}</ng-container>
		<ng-template
			*ngIf="!skeleton"
			[ngTemplateOutlet]="item.template"
			[ngTemplateOutletContext]="{data: item.data}">
		</ng-template>
	`, isInline: true, dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TableData, decorators: [{
            type: Component,
            args: [{
                    // tslint:disable-next-line: component-selector
                    selector: "[cdsTableData], [ibmTableData]",
                    template: `
		<ng-container *ngIf="!skeleton && !item.template">{{item.data}}</ng-container>
		<ng-template
			*ngIf="!skeleton"
			[ngTemplateOutlet]="item.template"
			[ngTemplateOutletContext]="{data: item.data}">
		</ng-template>
	`
                }]
        }], propDecorators: { item: [{
                type: Input
            }], skeleton: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtZGF0YS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvdGFibGUvY2VsbC90YWJsZS1kYXRhLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULEtBQUssRUFDTCxNQUFNLGVBQWUsQ0FBQzs7O0FBZXZCLE1BQU0sT0FBTyxTQUFTO0lBWnRCO1FBZVUsYUFBUSxHQUFHLEtBQUssQ0FBQztLQUMxQjs7c0dBSlksU0FBUzswRkFBVCxTQUFTLHNIQVRYOzs7Ozs7O0VBT1Q7MkZBRVcsU0FBUztrQkFackIsU0FBUzttQkFBQztvQkFDViwrQ0FBK0M7b0JBQy9DLFFBQVEsRUFBRSxnQ0FBZ0M7b0JBQzFDLFFBQVEsRUFBRTs7Ozs7OztFQU9UO2lCQUNEOzhCQUVTLElBQUk7c0JBQVosS0FBSztnQkFFRyxRQUFRO3NCQUFoQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0Q29tcG9uZW50LFxuXHRJbnB1dFxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgVGFibGVJdGVtIH0gZnJvbSBcIi4uL3RhYmxlLWl0ZW0uY2xhc3NcIjtcblxuQENvbXBvbmVudCh7XG5cdC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogY29tcG9uZW50LXNlbGVjdG9yXG5cdHNlbGVjdG9yOiBcIltjZHNUYWJsZURhdGFdLCBbaWJtVGFibGVEYXRhXVwiLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxuZy1jb250YWluZXIgKm5nSWY9XCIhc2tlbGV0b24gJiYgIWl0ZW0udGVtcGxhdGVcIj57e2l0ZW0uZGF0YX19PC9uZy1jb250YWluZXI+XG5cdFx0PG5nLXRlbXBsYXRlXG5cdFx0XHQqbmdJZj1cIiFza2VsZXRvblwiXG5cdFx0XHRbbmdUZW1wbGF0ZU91dGxldF09XCJpdGVtLnRlbXBsYXRlXCJcblx0XHRcdFtuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dF09XCJ7ZGF0YTogaXRlbS5kYXRhfVwiPlxuXHRcdDwvbmctdGVtcGxhdGU+XG5cdGBcbn0pXG5leHBvcnQgY2xhc3MgVGFibGVEYXRhIHtcblx0QElucHV0KCkgaXRlbTogVGFibGVJdGVtO1xuXG5cdEBJbnB1dCgpIHNrZWxldG9uID0gZmFsc2U7XG59XG4iXX0=