import { Directive, HostListener } from "@angular/core";
import * as i0 from "@angular/core";
export class ExpandedRowHover {
    addHoverClass(event) {
        event.target.previousElementSibling.classList.add("cds--expandable-row--hover");
    }
    removeHoverClass(event) {
        event.target.previousElementSibling.classList.remove("cds--expandable-row--hover");
    }
}
ExpandedRowHover.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ExpandedRowHover, deps: [], target: i0.ɵɵFactoryTarget.Directive });
ExpandedRowHover.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.3.0", type: ExpandedRowHover, selector: "[cdsExpandedRowHover], [ibmExpandedRowHover]", host: { listeners: { "mouseenter": "addHoverClass($event)", "mouseleave": "removeHoverClass($event)" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ExpandedRowHover, decorators: [{
            type: Directive,
            args: [{
                    selector: "[cdsExpandedRowHover], [ibmExpandedRowHover]"
                }]
        }], propDecorators: { addHoverClass: [{
                type: HostListener,
                args: ["mouseenter", ["$event"]]
            }], removeHoverClass: [{
                type: HostListener,
                args: ["mouseleave", ["$event"]]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5kZWQtcm93LWhvdmVyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YWJsZS9leHBhbmRlZC1yb3ctaG92ZXIuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTixTQUFTLEVBQ1QsWUFBWSxFQUNaLE1BQU0sZUFBZSxDQUFDOztBQUt2QixNQUFNLE9BQU8sZ0JBQWdCO0lBRTVCLGFBQWEsQ0FBQyxLQUFLO1FBQ2xCLEtBQUssQ0FBQyxNQUFNLENBQUMsc0JBQXNCLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO0lBQ2pGLENBQUM7SUFHRCxnQkFBZ0IsQ0FBQyxLQUFLO1FBQ3JCLEtBQUssQ0FBQyxNQUFNLENBQUMsc0JBQXNCLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO0lBQ3BGLENBQUM7OzZHQVRXLGdCQUFnQjtpR0FBaEIsZ0JBQWdCOzJGQUFoQixnQkFBZ0I7a0JBSDVCLFNBQVM7bUJBQUM7b0JBQ1YsUUFBUSxFQUFFLDhDQUE4QztpQkFDeEQ7OEJBR0EsYUFBYTtzQkFEWixZQUFZO3VCQUFDLFlBQVksRUFBRSxDQUFDLFFBQVEsQ0FBQztnQkFNdEMsZ0JBQWdCO3NCQURmLFlBQVk7dUJBQUMsWUFBWSxFQUFFLENBQUMsUUFBUSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0RGlyZWN0aXZlLFxuXHRIb3N0TGlzdGVuZXJcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuQERpcmVjdGl2ZSh7XG5cdHNlbGVjdG9yOiBcIltjZHNFeHBhbmRlZFJvd0hvdmVyXSwgW2libUV4cGFuZGVkUm93SG92ZXJdXCJcbn0pXG5leHBvcnQgY2xhc3MgRXhwYW5kZWRSb3dIb3ZlciB7XG5cdEBIb3N0TGlzdGVuZXIoXCJtb3VzZWVudGVyXCIsIFtcIiRldmVudFwiXSlcblx0YWRkSG92ZXJDbGFzcyhldmVudCkge1xuXHRcdGV2ZW50LnRhcmdldC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5hZGQoXCJjZHMtLWV4cGFuZGFibGUtcm93LS1ob3ZlclwiKTtcblx0fVxuXG5cdEBIb3N0TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsIFtcIiRldmVudFwiXSlcblx0cmVtb3ZlSG92ZXJDbGFzcyhldmVudCkge1xuXHRcdGV2ZW50LnRhcmdldC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5yZW1vdmUoXCJjZHMtLWV4cGFuZGFibGUtcm93LS1ob3ZlclwiKTtcblx0fVxufVxuIl19