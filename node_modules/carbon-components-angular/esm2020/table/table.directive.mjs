import { Directive, HostBinding, Input } from "@angular/core";
import * as i0 from "@angular/core";
export class TableDirective {
    constructor() {
        this.sortable = true;
        this.noBorder = true;
        this.striped = false;
        this.skeleton = false;
        /**
         * Size of the table rows.
         */
        this.size = "md";
        this.tableClass = true;
    }
    // Bind table size class
    get extraSmallSize() { return this.size === "xs"; }
    get smallSize() { return this.size === "sm"; }
    get mediumSize() { return this.size === "md"; }
    get LargeSize() { return this.size === "lg"; }
    get extraLargeSize() { return this.size === "xl"; }
}
TableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TableDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
TableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.3.0", type: TableDirective, selector: "[cdsTable], [ibmTable]", inputs: { sortable: "sortable", noBorder: "noBorder", striped: "striped", skeleton: "skeleton", size: "size" }, host: { properties: { "class.cds--data-table--sort": "this.sortable", "class.cds--data-table--no-border": "this.noBorder", "class.cds--data-table--zebra": "this.striped", "class.cds--skeleton": "this.skeleton", "class.cds--data-table": "this.tableClass", "class.cds--data-table--xs": "this.extraSmallSize", "class.cds--data-table--sm": "this.smallSize", "class.cds--data-table--md": "this.mediumSize", "class.cds--data-table--lg": "this.LargeSize", "class.cds--data-table--xl": "this.extraLargeSize" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: "[cdsTable], [ibmTable]"
                }]
        }], propDecorators: { sortable: [{
                type: Input
            }, {
                type: HostBinding,
                args: ["class.cds--data-table--sort"]
            }], noBorder: [{
                type: Input
            }, {
                type: HostBinding,
                args: ["class.cds--data-table--no-border"]
            }], striped: [{
                type: Input
            }, {
                type: HostBinding,
                args: ["class.cds--data-table--zebra"]
            }], skeleton: [{
                type: Input
            }, {
                type: HostBinding,
                args: ["class.cds--skeleton"]
            }], size: [{
                type: Input
            }], tableClass: [{
                type: HostBinding,
                args: ["class.cds--data-table"]
            }], extraSmallSize: [{
                type: HostBinding,
                args: ["class.cds--data-table--xs"]
            }], smallSize: [{
                type: HostBinding,
                args: ["class.cds--data-table--sm"]
            }], mediumSize: [{
                type: HostBinding,
                args: ["class.cds--data-table--md"]
            }], LargeSize: [{
                type: HostBinding,
                args: ["class.cds--data-table--lg"]
            }], extraLargeSize: [{
                type: HostBinding,
                args: ["class.cds--data-table--xl"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3RhYmxlL3RhYmxlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBTTlELE1BQU0sT0FBTyxjQUFjO0lBSDNCO1FBSXNELGFBQVEsR0FBRyxJQUFJLENBQUM7UUFFWCxhQUFRLEdBQUcsSUFBSSxDQUFDO1FBRXBCLFlBQU8sR0FBRyxLQUFLLENBQUM7UUFFekIsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUU5RDs7V0FFRztRQUNNLFNBQUksR0FBaUIsSUFBSSxDQUFDO1FBRUcsZUFBVSxHQUFHLElBQUksQ0FBQztLQVN4RDtJQVBBLHdCQUF3QjtJQUN4QixJQUE4QyxjQUFjLEtBQUssT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDN0YsSUFBOEMsU0FBUyxLQUFLLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3hGLElBQThDLFVBQVUsS0FBSyxPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQztJQUN6RixJQUE4QyxTQUFTLEtBQUssT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDeEYsSUFBOEMsY0FBYyxLQUFLLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDOzsyR0FyQmpGLGNBQWM7K0ZBQWQsY0FBYzsyRkFBZCxjQUFjO2tCQUgxQixTQUFTO21CQUFDO29CQUNWLFFBQVEsRUFBRSx3QkFBd0I7aUJBQ2xDOzhCQUVxRCxRQUFRO3NCQUE1RCxLQUFLOztzQkFBSSxXQUFXO3VCQUFDLDZCQUE2QjtnQkFFTyxRQUFRO3NCQUFqRSxLQUFLOztzQkFBSSxXQUFXO3VCQUFDLGtDQUFrQztnQkFFRixPQUFPO3NCQUE1RCxLQUFLOztzQkFBSSxXQUFXO3VCQUFDLDhCQUE4QjtnQkFFUCxRQUFRO3NCQUFwRCxLQUFLOztzQkFBSSxXQUFXO3VCQUFDLHFCQUFxQjtnQkFLbEMsSUFBSTtzQkFBWixLQUFLO2dCQUVnQyxVQUFVO3NCQUEvQyxXQUFXO3VCQUFDLHVCQUF1QjtnQkFHVSxjQUFjO3NCQUEzRCxXQUFXO3VCQUFDLDJCQUEyQjtnQkFDTSxTQUFTO3NCQUF0RCxXQUFXO3VCQUFDLDJCQUEyQjtnQkFDTSxVQUFVO3NCQUF2RCxXQUFXO3VCQUFDLDJCQUEyQjtnQkFDTSxTQUFTO3NCQUF0RCxXQUFXO3VCQUFDLDJCQUEyQjtnQkFDTSxjQUFjO3NCQUEzRCxXQUFXO3VCQUFDLDJCQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdEJpbmRpbmcsIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IFRhYmxlUm93U2l6ZSB9IGZyb20gXCIuL3RhYmxlLnR5cGVzXCI7XG5cbkBEaXJlY3RpdmUoe1xuXHRzZWxlY3RvcjogXCJbY2RzVGFibGVdLCBbaWJtVGFibGVdXCJcbn0pXG5leHBvcnQgY2xhc3MgVGFibGVEaXJlY3RpdmUge1xuXHRASW5wdXQoKSBASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLWRhdGEtdGFibGUtLXNvcnRcIikgc29ydGFibGUgPSB0cnVlO1xuXG5cdEBJbnB1dCgpIEBIb3N0QmluZGluZyhcImNsYXNzLmNkcy0tZGF0YS10YWJsZS0tbm8tYm9yZGVyXCIpIG5vQm9yZGVyID0gdHJ1ZTtcblxuXHRASW5wdXQoKSBASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLWRhdGEtdGFibGUtLXplYnJhXCIpIHN0cmlwZWQgPSBmYWxzZTtcblxuXHRASW5wdXQoKSBASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLXNrZWxldG9uXCIpIHNrZWxldG9uID0gZmFsc2U7XG5cblx0LyoqXG5cdCAqIFNpemUgb2YgdGhlIHRhYmxlIHJvd3MuXG5cdCAqL1xuXHRASW5wdXQoKSBzaXplOiBUYWJsZVJvd1NpemUgPSBcIm1kXCI7XG5cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuY2RzLS1kYXRhLXRhYmxlXCIpIHRhYmxlQ2xhc3MgPSB0cnVlO1xuXG5cdC8vIEJpbmQgdGFibGUgc2l6ZSBjbGFzc1xuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLWRhdGEtdGFibGUtLXhzXCIpIGdldCBleHRyYVNtYWxsU2l6ZSgpIHsgcmV0dXJuIHRoaXMuc2l6ZSA9PT0gXCJ4c1wiOyB9XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmNkcy0tZGF0YS10YWJsZS0tc21cIikgZ2V0IHNtYWxsU2l6ZSgpIHsgcmV0dXJuIHRoaXMuc2l6ZSA9PT0gXCJzbVwiOyB9XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmNkcy0tZGF0YS10YWJsZS0tbWRcIikgZ2V0IG1lZGl1bVNpemUoKSB7IHJldHVybiB0aGlzLnNpemUgPT09IFwibWRcIjsgfVxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLWRhdGEtdGFibGUtLWxnXCIpIGdldCBMYXJnZVNpemUoKSB7IHJldHVybiB0aGlzLnNpemUgPT09IFwibGdcIjsgfVxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLWRhdGEtdGFibGUtLXhsXCIpIGdldCBleHRyYUxhcmdlU2l6ZSgpIHsgcmV0dXJuIHRoaXMuc2l6ZSA9PT0gXCJ4bFwiOyB9XG5cbn1cbiJdfQ==