import { Component, HostBinding, Input } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
/**
 * `ListColumn` represents a single column in a `StructuredList`.
 *
 * `ListColumn`s can be used in a `ListHeader` to specify the column headers, or in `ListRow`s to specify the column data.
 *
 * Example:
 * ```html
 * <cds-list-column nowrap="true">Column 1</cds-list-column>
 * ```
 */
export class ListColumn {
    constructor() {
        this.skeleton = false;
        this.role = "cell";
        this.isHeaderColumn = true;
        this.isBodyColumn = true;
        /**
         * Applies `white-space: nowrap` to the content of this `ListColumn`
         */
        this.nowrap = false;
    }
}
ListColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ListColumn, deps: [], target: i0.ɵɵFactoryTarget.Component });
ListColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: ListColumn, selector: "cds-list-column, ibm-list-column", inputs: { skeleton: "skeleton", nowrap: "nowrap" }, host: { properties: { "attr.role": "this.role", "class.cds--structured-list-th": "this.isHeaderColumn", "class.cds--structured-list-td": "this.isBodyColumn", "class.cds--structured-list-content--nowrap": "this.nowrap" } }, ngImport: i0, template: `
		<span *ngIf="skeleton"></span>
		<ng-content></ng-content>
	`, isInline: true, dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ListColumn, decorators: [{
            type: Component,
            args: [{
                    selector: "cds-list-column, ibm-list-column",
                    template: `
		<span *ngIf="skeleton"></span>
		<ng-content></ng-content>
	`
                }]
        }], propDecorators: { skeleton: [{
                type: Input
            }], role: [{
                type: HostBinding,
                args: ["attr.role"]
            }], isHeaderColumn: [{
                type: HostBinding,
                args: ["class.cds--structured-list-th"]
            }], isBodyColumn: [{
                type: HostBinding,
                args: ["class.cds--structured-list-td"]
            }], nowrap: [{
                type: HostBinding,
                args: ["class.cds--structured-list-content--nowrap"]
            }, {
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1jb2x1bW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3N0cnVjdHVyZWQtbGlzdC9saXN0LWNvbHVtbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFFOUQ7Ozs7Ozs7OztHQVNHO0FBUUgsTUFBTSxPQUFPLFVBQVU7SUFQdkI7UUFRVSxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRUEsU0FBSSxHQUFHLE1BQU0sQ0FBQztRQUNNLG1CQUFjLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLGlCQUFZLEdBQUcsSUFBSSxDQUFDO1FBQ2xFOztXQUVHO1FBQ2lFLFdBQU0sR0FBRyxLQUFLLENBQUM7S0FDbkY7O3VHQVZZLFVBQVU7MkZBQVYsVUFBVSwyVkFMWjs7O0VBR1Q7MkZBRVcsVUFBVTtrQkFQdEIsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUsa0NBQWtDO29CQUM1QyxRQUFRLEVBQUU7OztFQUdUO2lCQUNEOzhCQUVTLFFBQVE7c0JBQWhCLEtBQUs7Z0JBRW9CLElBQUk7c0JBQTdCLFdBQVc7dUJBQUMsV0FBVztnQkFDc0IsY0FBYztzQkFBM0QsV0FBVzt1QkFBQywrQkFBK0I7Z0JBQ0UsWUFBWTtzQkFBekQsV0FBVzt1QkFBQywrQkFBK0I7Z0JBSXdCLE1BQU07c0JBQXpFLFdBQVc7dUJBQUMsNENBQTRDOztzQkFBRyxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0QmluZGluZywgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG4vKipcbiAqIGBMaXN0Q29sdW1uYCByZXByZXNlbnRzIGEgc2luZ2xlIGNvbHVtbiBpbiBhIGBTdHJ1Y3R1cmVkTGlzdGAuXG4gKlxuICogYExpc3RDb2x1bW5gcyBjYW4gYmUgdXNlZCBpbiBhIGBMaXN0SGVhZGVyYCB0byBzcGVjaWZ5IHRoZSBjb2x1bW4gaGVhZGVycywgb3IgaW4gYExpc3RSb3dgcyB0byBzcGVjaWZ5IHRoZSBjb2x1bW4gZGF0YS5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgaHRtbFxuICogPGNkcy1saXN0LWNvbHVtbiBub3dyYXA9XCJ0cnVlXCI+Q29sdW1uIDE8L2Nkcy1saXN0LWNvbHVtbj5cbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6IFwiY2RzLWxpc3QtY29sdW1uLCBpYm0tbGlzdC1jb2x1bW5cIixcblx0dGVtcGxhdGU6IGBcblx0XHQ8c3BhbiAqbmdJZj1cInNrZWxldG9uXCI+PC9zcGFuPlxuXHRcdDxuZy1jb250ZW50PjwvbmctY29udGVudD5cblx0YFxufSlcbmV4cG9ydCBjbGFzcyBMaXN0Q29sdW1uIHtcblx0QElucHV0KCkgc2tlbGV0b24gPSBmYWxzZTtcblxuXHRASG9zdEJpbmRpbmcoXCJhdHRyLnJvbGVcIikgcm9sZSA9IFwiY2VsbFwiO1xuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLXN0cnVjdHVyZWQtbGlzdC10aFwiKSBpc0hlYWRlckNvbHVtbiA9IHRydWU7XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmNkcy0tc3RydWN0dXJlZC1saXN0LXRkXCIpIGlzQm9keUNvbHVtbiA9IHRydWU7XG5cdC8qKlxuXHQgKiBBcHBsaWVzIGB3aGl0ZS1zcGFjZTogbm93cmFwYCB0byB0aGUgY29udGVudCBvZiB0aGlzIGBMaXN0Q29sdW1uYFxuXHQgKi9cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuY2RzLS1zdHJ1Y3R1cmVkLWxpc3QtY29udGVudC0tbm93cmFwXCIpIEBJbnB1dCgpIG5vd3JhcCA9IGZhbHNlO1xufVxuIl19