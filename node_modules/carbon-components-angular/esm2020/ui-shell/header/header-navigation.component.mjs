import { Component, HostBinding, Input } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./header-item.component";
import * as i3 from "./header-menu.component";
/**
 * Container for header navigation items
 */
export class HeaderNavigation {
    constructor() {
        this.height = 100;
    }
}
HeaderNavigation.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: HeaderNavigation, deps: [], target: i0.ɵɵFactoryTarget.Component });
HeaderNavigation.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: HeaderNavigation, selector: "cds-header-navigation, ibm-header-navigation", inputs: { ariaLabel: "ariaLabel", navigationItems: "navigationItems" }, host: { properties: { "style.height.%": "this.height" } }, ngImport: i0, template: `
		<nav class="cds--header__nav" [attr.aria-label]="ariaLabel">
			<div class="cds--header__menu-bar" role="list">
				<ng-content></ng-content>
				<ng-container *ngFor="let navigationItem of navigationItems">
					<cds-header-item
						*ngIf="navigationItem.type === 'item'"
						[href]="navigationItem.href"
						[route]="navigationItem.route"
						[routeExtras]="navigationItem.routeExtras"
						[isCurrentPage]="!!navigationItem.isCurrentPage">
						{{ navigationItem.content }}
					</cds-header-item>
					<cds-header-menu
						*ngIf="navigationItem.type === 'menu'"
						[href]="navigationItem.href"
						[title]="navigationItem.title"
						[trigger]="navigationItem.trigger ? navigationItem.trigger : 'click'"
						[headerItems]="navigationItem.menuItems">
					</cds-header-menu>
				</ng-container>
			</div>
		</nav>
	`, isInline: true, dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.HeaderItem, selector: "cds-header-item, ibm-header-item", inputs: ["href", "useRouter", "activeLinkClass", "isCurrentPage", "route", "routeExtras"], outputs: ["navigation"] }, { kind: "component", type: i3.HeaderMenu, selector: "cds-header-menu, ibm-header-menu", inputs: ["title", "href", "trigger", "headerItems", "icon"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: HeaderNavigation, decorators: [{
            type: Component,
            args: [{
                    selector: "cds-header-navigation, ibm-header-navigation",
                    template: `
		<nav class="cds--header__nav" [attr.aria-label]="ariaLabel">
			<div class="cds--header__menu-bar" role="list">
				<ng-content></ng-content>
				<ng-container *ngFor="let navigationItem of navigationItems">
					<cds-header-item
						*ngIf="navigationItem.type === 'item'"
						[href]="navigationItem.href"
						[route]="navigationItem.route"
						[routeExtras]="navigationItem.routeExtras"
						[isCurrentPage]="!!navigationItem.isCurrentPage">
						{{ navigationItem.content }}
					</cds-header-item>
					<cds-header-menu
						*ngIf="navigationItem.type === 'menu'"
						[href]="navigationItem.href"
						[title]="navigationItem.title"
						[trigger]="navigationItem.trigger ? navigationItem.trigger : 'click'"
						[headerItems]="navigationItem.menuItems">
					</cds-header-menu>
				</ng-container>
			</div>
		</nav>
	`
                }]
        }], propDecorators: { height: [{
                type: HostBinding,
                args: ["style.height.%"]
            }], ariaLabel: [{
                type: Input
            }], navigationItems: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLW5hdmlnYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3VpLXNoZWxsL2hlYWRlci9oZWFkZXItbmF2aWdhdGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNOLFNBQVMsRUFDVCxXQUFXLEVBQ1gsS0FBSyxFQUNMLE1BQU0sZUFBZSxDQUFDOzs7OztBQUV2Qjs7R0FFRztBQTRCSCxNQUFNLE9BQU8sZ0JBQWdCO0lBM0I3QjtRQTRCZ0MsV0FBTSxHQUFHLEdBQUcsQ0FBQztLQVU1Qzs7NkdBWFksZ0JBQWdCO2lHQUFoQixnQkFBZ0IsdU5BekJsQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUF1QlQ7MkZBRVcsZ0JBQWdCO2tCQTNCNUIsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUsOENBQThDO29CQUN4RCxRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBdUJUO2lCQUNEOzhCQUUrQixNQUFNO3NCQUFwQyxXQUFXO3VCQUFDLGdCQUFnQjtnQkFFcEIsU0FBUztzQkFBakIsS0FBSztnQkFPRyxlQUFlO3NCQUF2QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0Q29tcG9uZW50LFxuXHRIb3N0QmluZGluZyxcblx0SW5wdXRcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IE5hdmlnYXRpb25JdGVtIH0gZnJvbSBcIi4vaGVhZGVyLW5hdmlnYXRpb24taXRlbXMuaW50ZXJmYWNlXCI7XG4vKipcbiAqIENvbnRhaW5lciBmb3IgaGVhZGVyIG5hdmlnYXRpb24gaXRlbXNcbiAqL1xuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiBcImNkcy1oZWFkZXItbmF2aWdhdGlvbiwgaWJtLWhlYWRlci1uYXZpZ2F0aW9uXCIsXG5cdHRlbXBsYXRlOiBgXG5cdFx0PG5hdiBjbGFzcz1cImNkcy0taGVhZGVyX19uYXZcIiBbYXR0ci5hcmlhLWxhYmVsXT1cImFyaWFMYWJlbFwiPlxuXHRcdFx0PGRpdiBjbGFzcz1cImNkcy0taGVhZGVyX19tZW51LWJhclwiIHJvbGU9XCJsaXN0XCI+XG5cdFx0XHRcdDxuZy1jb250ZW50PjwvbmctY29udGVudD5cblx0XHRcdFx0PG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgbmF2aWdhdGlvbkl0ZW0gb2YgbmF2aWdhdGlvbkl0ZW1zXCI+XG5cdFx0XHRcdFx0PGNkcy1oZWFkZXItaXRlbVxuXHRcdFx0XHRcdFx0Km5nSWY9XCJuYXZpZ2F0aW9uSXRlbS50eXBlID09PSAnaXRlbSdcIlxuXHRcdFx0XHRcdFx0W2hyZWZdPVwibmF2aWdhdGlvbkl0ZW0uaHJlZlwiXG5cdFx0XHRcdFx0XHRbcm91dGVdPVwibmF2aWdhdGlvbkl0ZW0ucm91dGVcIlxuXHRcdFx0XHRcdFx0W3JvdXRlRXh0cmFzXT1cIm5hdmlnYXRpb25JdGVtLnJvdXRlRXh0cmFzXCJcblx0XHRcdFx0XHRcdFtpc0N1cnJlbnRQYWdlXT1cIiEhbmF2aWdhdGlvbkl0ZW0uaXNDdXJyZW50UGFnZVwiPlxuXHRcdFx0XHRcdFx0e3sgbmF2aWdhdGlvbkl0ZW0uY29udGVudCB9fVxuXHRcdFx0XHRcdDwvY2RzLWhlYWRlci1pdGVtPlxuXHRcdFx0XHRcdDxjZHMtaGVhZGVyLW1lbnVcblx0XHRcdFx0XHRcdCpuZ0lmPVwibmF2aWdhdGlvbkl0ZW0udHlwZSA9PT0gJ21lbnUnXCJcblx0XHRcdFx0XHRcdFtocmVmXT1cIm5hdmlnYXRpb25JdGVtLmhyZWZcIlxuXHRcdFx0XHRcdFx0W3RpdGxlXT1cIm5hdmlnYXRpb25JdGVtLnRpdGxlXCJcblx0XHRcdFx0XHRcdFt0cmlnZ2VyXT1cIm5hdmlnYXRpb25JdGVtLnRyaWdnZXIgPyBuYXZpZ2F0aW9uSXRlbS50cmlnZ2VyIDogJ2NsaWNrJ1wiXG5cdFx0XHRcdFx0XHRbaGVhZGVySXRlbXNdPVwibmF2aWdhdGlvbkl0ZW0ubWVudUl0ZW1zXCI+XG5cdFx0XHRcdFx0PC9jZHMtaGVhZGVyLW1lbnU+XG5cdFx0XHRcdDwvbmctY29udGFpbmVyPlxuXHRcdFx0PC9kaXY+XG5cdFx0PC9uYXY+XG5cdGBcbn0pXG5leHBvcnQgY2xhc3MgSGVhZGVyTmF2aWdhdGlvbiB7XG5cdEBIb3N0QmluZGluZyhcInN0eWxlLmhlaWdodC4lXCIpIGhlaWdodCA9IDEwMDtcblxuXHRASW5wdXQoKSBhcmlhTGFiZWw6IHN0cmluZztcblxuXHQvKipcblx0ICogQ3JlYXRlcyB0aGUgaGVhZGVyIG5hdmlnYXRpb24gaXRlbXMgYW5kIG1lbnUgaXRlbXMgdGhyb3VnaCBhIGxpc3Qgb2YgbmF2aWdhdGlvbiBpdGVtIG9iamVjdHMuXG5cdCAqIEluIG9yZGVyIGZvciB0aGUgbmF2aWdhdGlvbiBpdGVtcyB0byBtb3ZlIHRvIHRoZSBzaWRlIG5hdmlnYXRpb24gd2hlbiB3aW5kb3cgc2l6ZSBpcyBsZXNzIHRoYW4gMTA1NnB4LFxuXHQgKiBuYXZpZ2F0aW9uIGl0ZW1zIG5lZWQgdG8gYmUgcGFzc2VkIGludG8gYm90aCBjZHMtaGVhZGVyLW5hdmlnYXRpb24gYW5kIGNkcy1zaWRlbmF2LlxuXHQgKi9cblx0QElucHV0KCkgbmF2aWdhdGlvbkl0ZW1zOiBOYXZpZ2F0aW9uSXRlbVtdO1xufVxuIl19