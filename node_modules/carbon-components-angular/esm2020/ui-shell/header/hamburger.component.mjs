import { Component, Output, EventEmitter, Input } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "carbon-components-angular/i18n";
import * as i2 from "@angular/common";
import * as i3 from "carbon-components-angular/icon";
/**
 * A toggle for the side navigation
 */
export class Hamburger {
    constructor(i18n) {
        this.i18n = i18n;
        /**
         * Controls the active/selected state for the `Hamburger` menu.
         */
        this.active = false;
        /**
         * `EventEmitter` to notify parent components of menu click events.
         */
        this.selected = new EventEmitter();
    }
    /**
     * Emit the Hamburger click event upwards.
     */
    doClick() {
        this.selected.emit(this.active);
    }
}
Hamburger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: Hamburger, deps: [{ token: i1.I18n }], target: i0.ɵɵFactoryTarget.Component });
Hamburger.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: Hamburger, selector: "cds-hamburger, ibm-hamburger", inputs: { active: "active" }, outputs: { selected: "selected" }, ngImport: i0, template: `
		<button
			type="button"
			(click)="doClick()"
			[ngClass]="{'cds--header__action--active': active}"
			class="cds--header__menu-trigger cds--header__action cds--header__menu-toggle"
			[attr.aria-label]="active
				? (i18n.get('UI_SHELL.HEADER.CLOSE_MENU') | async)
				: (i18n.get('UI_SHELL.HEADER.OPEN_MENU') | async)"
			[attr.title]="active
				? (i18n.get('UI_SHELL.HEADER.CLOSE_MENU') | async)
				: (i18n.get('UI_SHELL.HEADER.OPEN_MENU') | async)">
			<svg *ngIf="!active" cdsIcon="menu" size="20"></svg>
			<svg *ngIf="active" cdsIcon="close" size="20"></svg>
		</button>
	`, isInline: true, dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.IconDirective, selector: "[cdsIcon], [ibmIcon]", inputs: ["ibmIcon", "cdsIcon", "size", "title", "ariaLabel", "ariaLabelledBy", "ariaHidden", "isFocusable"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: Hamburger, decorators: [{
            type: Component,
            args: [{
                    selector: "cds-hamburger, ibm-hamburger",
                    template: `
		<button
			type="button"
			(click)="doClick()"
			[ngClass]="{'cds--header__action--active': active}"
			class="cds--header__menu-trigger cds--header__action cds--header__menu-toggle"
			[attr.aria-label]="active
				? (i18n.get('UI_SHELL.HEADER.CLOSE_MENU') | async)
				: (i18n.get('UI_SHELL.HEADER.OPEN_MENU') | async)"
			[attr.title]="active
				? (i18n.get('UI_SHELL.HEADER.CLOSE_MENU') | async)
				: (i18n.get('UI_SHELL.HEADER.OPEN_MENU') | async)">
			<svg *ngIf="!active" cdsIcon="menu" size="20"></svg>
			<svg *ngIf="active" cdsIcon="close" size="20"></svg>
		</button>
	`
                }]
        }], ctorParameters: function () { return [{ type: i1.I18n }]; }, propDecorators: { active: [{
                type: Input
            }], selected: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFtYnVyZ2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy91aS1zaGVsbC9oZWFkZXIvaGFtYnVyZ2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULE1BQU0sRUFDTixZQUFZLEVBQ1osS0FBSyxFQUNMLE1BQU0sZUFBZSxDQUFDOzs7OztBQUd2Qjs7R0FFRztBQW9CSCxNQUFNLE9BQU8sU0FBUztJQVdyQixZQUFtQixJQUFVO1FBQVYsU0FBSSxHQUFKLElBQUksQ0FBTTtRQVY3Qjs7V0FFRztRQUNNLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFFeEI7O1dBRUc7UUFDTyxhQUFRLEdBQXlCLElBQUksWUFBWSxFQUFVLENBQUM7SUFFckMsQ0FBQztJQUVsQzs7T0FFRztJQUNJLE9BQU87UUFDYixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDakMsQ0FBQzs7c0dBbEJXLFNBQVM7MEZBQVQsU0FBUyxxSUFqQlg7Ozs7Ozs7Ozs7Ozs7OztFQWVUOzJGQUVXLFNBQVM7a0JBbkJyQixTQUFTO21CQUFDO29CQUNWLFFBQVEsRUFBRSw4QkFBOEI7b0JBQ3hDLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7O0VBZVQ7aUJBQ0Q7MkZBS1MsTUFBTTtzQkFBZCxLQUFLO2dCQUtJLFFBQVE7c0JBQWpCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdE91dHB1dCxcblx0RXZlbnRFbWl0dGVyLFxuXHRJbnB1dFxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgSTE4biB9IGZyb20gXCJjYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2kxOG5cIjtcblxuLyoqXG4gKiBBIHRvZ2dsZSBmb3IgdGhlIHNpZGUgbmF2aWdhdGlvblxuICovXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6IFwiY2RzLWhhbWJ1cmdlciwgaWJtLWhhbWJ1cmdlclwiLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxidXR0b25cblx0XHRcdHR5cGU9XCJidXR0b25cIlxuXHRcdFx0KGNsaWNrKT1cImRvQ2xpY2soKVwiXG5cdFx0XHRbbmdDbGFzc109XCJ7J2Nkcy0taGVhZGVyX19hY3Rpb24tLWFjdGl2ZSc6IGFjdGl2ZX1cIlxuXHRcdFx0Y2xhc3M9XCJjZHMtLWhlYWRlcl9fbWVudS10cmlnZ2VyIGNkcy0taGVhZGVyX19hY3Rpb24gY2RzLS1oZWFkZXJfX21lbnUtdG9nZ2xlXCJcblx0XHRcdFthdHRyLmFyaWEtbGFiZWxdPVwiYWN0aXZlXG5cdFx0XHRcdD8gKGkxOG4uZ2V0KCdVSV9TSEVMTC5IRUFERVIuQ0xPU0VfTUVOVScpIHwgYXN5bmMpXG5cdFx0XHRcdDogKGkxOG4uZ2V0KCdVSV9TSEVMTC5IRUFERVIuT1BFTl9NRU5VJykgfCBhc3luYylcIlxuXHRcdFx0W2F0dHIudGl0bGVdPVwiYWN0aXZlXG5cdFx0XHRcdD8gKGkxOG4uZ2V0KCdVSV9TSEVMTC5IRUFERVIuQ0xPU0VfTUVOVScpIHwgYXN5bmMpXG5cdFx0XHRcdDogKGkxOG4uZ2V0KCdVSV9TSEVMTC5IRUFERVIuT1BFTl9NRU5VJykgfCBhc3luYylcIj5cblx0XHRcdDxzdmcgKm5nSWY9XCIhYWN0aXZlXCIgY2RzSWNvbj1cIm1lbnVcIiBzaXplPVwiMjBcIj48L3N2Zz5cblx0XHRcdDxzdmcgKm5nSWY9XCJhY3RpdmVcIiBjZHNJY29uPVwiY2xvc2VcIiBzaXplPVwiMjBcIj48L3N2Zz5cblx0XHQ8L2J1dHRvbj5cblx0YFxufSlcbmV4cG9ydCBjbGFzcyBIYW1idXJnZXIge1xuXHQvKipcblx0ICogQ29udHJvbHMgdGhlIGFjdGl2ZS9zZWxlY3RlZCBzdGF0ZSBmb3IgdGhlIGBIYW1idXJnZXJgIG1lbnUuXG5cdCAqL1xuXHRASW5wdXQoKSBhY3RpdmUgPSBmYWxzZTtcblxuXHQvKipcblx0ICogYEV2ZW50RW1pdHRlcmAgdG8gbm90aWZ5IHBhcmVudCBjb21wb25lbnRzIG9mIG1lbnUgY2xpY2sgZXZlbnRzLlxuXHQgKi9cblx0QE91dHB1dCgpIHNlbGVjdGVkOiBFdmVudEVtaXR0ZXI8T2JqZWN0PiA9IG5ldyBFdmVudEVtaXR0ZXI8T2JqZWN0PigpO1xuXG5cdGNvbnN0cnVjdG9yKHB1YmxpYyBpMThuOiBJMThuKSB7IH1cblxuXHQvKipcblx0ICogRW1pdCB0aGUgSGFtYnVyZ2VyIGNsaWNrIGV2ZW50IHVwd2FyZHMuXG5cdCAqL1xuXHRwdWJsaWMgZG9DbGljaygpIHtcblx0XHR0aGlzLnNlbGVjdGVkLmVtaXQodGhpcy5hY3RpdmUpO1xuXHR9XG59XG4iXX0=