/**
 * An enum of the various reasons a dialog may close. For use with `CloseMeta` and `shouldClose`
 *
 * It's expected that `interaction` will be a common closure reason.
 */
export var CloseReasons;
(function (CloseReasons) {
    /**
     * For when the component is closed by being destroyed
     */
    CloseReasons[CloseReasons["destroyed"] = 0] = "destroyed";
    /**
     * For use in cases where the dialog closes for programmatic reasons other than destruction
     */
    CloseReasons[CloseReasons["programmatic"] = 1] = "programmatic";
    /**
     * interaction reasons will also provide a target for the interaction
     */
    CloseReasons[CloseReasons["interaction"] = 2] = "interaction";
    /**
     * For use in cases where the dialog closes due to being hidden
     */
    CloseReasons[CloseReasons["hidden"] = 3] = "hidden";
})(CloseReasons || (CloseReasons = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLWNvbmZpZy5pbnRlcmZhY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZGlhbG9nL2RpYWxvZy1jb25maWcuaW50ZXJmYWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBOzs7O0dBSUc7QUFDSCxNQUFNLENBQU4sSUFBWSxZQWlCWDtBQWpCRCxXQUFZLFlBQVk7SUFDdkI7O09BRUc7SUFDSCx5REFBUyxDQUFBO0lBQ1Q7O09BRUc7SUFDSCwrREFBWSxDQUFBO0lBQ1o7O09BRUc7SUFDSCw2REFBVyxDQUFBO0lBQ1g7O09BRUc7SUFDSCxtREFBTSxDQUFBO0FBQ1AsQ0FBQyxFQWpCVyxZQUFZLEtBQVosWUFBWSxRQWlCdkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBUZW1wbGF0ZVJlZiB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbi8qKlxuICogQW4gZW51bSBvZiB0aGUgdmFyaW91cyByZWFzb25zIGEgZGlhbG9nIG1heSBjbG9zZS4gRm9yIHVzZSB3aXRoIGBDbG9zZU1ldGFgIGFuZCBgc2hvdWxkQ2xvc2VgXG4gKlxuICogSXQncyBleHBlY3RlZCB0aGF0IGBpbnRlcmFjdGlvbmAgd2lsbCBiZSBhIGNvbW1vbiBjbG9zdXJlIHJlYXNvbi5cbiAqL1xuZXhwb3J0IGVudW0gQ2xvc2VSZWFzb25zIHtcblx0LyoqXG5cdCAqIEZvciB3aGVuIHRoZSBjb21wb25lbnQgaXMgY2xvc2VkIGJ5IGJlaW5nIGRlc3Ryb3llZFxuXHQgKi9cblx0ZGVzdHJveWVkLFxuXHQvKipcblx0ICogRm9yIHVzZSBpbiBjYXNlcyB3aGVyZSB0aGUgZGlhbG9nIGNsb3NlcyBmb3IgcHJvZ3JhbW1hdGljIHJlYXNvbnMgb3RoZXIgdGhhbiBkZXN0cnVjdGlvblxuXHQgKi9cblx0cHJvZ3JhbW1hdGljLFxuXHQvKipcblx0ICogaW50ZXJhY3Rpb24gcmVhc29ucyB3aWxsIGFsc28gcHJvdmlkZSBhIHRhcmdldCBmb3IgdGhlIGludGVyYWN0aW9uXG5cdCAqL1xuXHRpbnRlcmFjdGlvbixcblx0LyoqXG5cdCAqIEZvciB1c2UgaW4gY2FzZXMgd2hlcmUgdGhlIGRpYWxvZyBjbG9zZXMgZHVlIHRvIGJlaW5nIGhpZGRlblxuXHQgKi9cblx0aGlkZGVuXG59XG5cbi8qKlxuICogSW50ZXJmYWNlIHJlcHJlc2VudGluZyB2YXJpb3VzIG1ldGFkYXRhIHRoYXQgY2FuIGJlIHBhc3NlZCB0byBgc2hvdWxkQ2xvc2VgIGFuZCB0aGUgYGNsb3NlYCBldmVudFxuICovXG5leHBvcnQgaW50ZXJmYWNlIENsb3NlTWV0YSB7XG5cdHJlYXNvbjogQ2xvc2VSZWFzb25zO1xuXHR0YXJnZXQ/OiBFdmVudFRhcmdldDtcbn1cblxuLyoqXG4gKiBEYXRhIHN0cnVjdHVyZSBmb3IgZGVmaW5pZyBwcm9wZXJ0aWVzIG9mIGEgYERpYWxvZ2AgY29tcG9uZW50LlxuICoqL1xuZXhwb3J0IGludGVyZmFjZSBEaWFsb2dDb25maWcge1xuXHQvKipcblx0ICogVGl0bGUgZm9yIHRoZSBgRGlhbG9nYCBoZWFkZXIuXG5cdCAqL1xuXHR0aXRsZT86IHN0cmluZztcblx0LyoqXG5cdCAqIEJvZHkgY29udGVudCBmb3IgdGhlIGBEaWFsb2dgLlxuXHQgKi9cblx0Y29udGVudDogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55Pjtcblx0LyoqXG5cdCAqIFBhcmFtZXRlciBmb3IgdHJpZ2dlcmluZyBgRGlhbG9nYCBkaXNwbGF5LlxuXHQgKi9cblx0dHJpZ2dlcj86IFwiY2xpY2tcIiB8IFwiaG92ZXJcIiB8IFwibW91c2VlbnRlclwiO1xuXHQvKipcblx0ICogUGFyYW1ldGVyIGZvciB0cmlnZ2VyaW5nIHRoZSBgRGlhbG9nYCBjbG9zZSBldmVudC5cblx0ICovXG5cdGNsb3NlVHJpZ2dlcj86IFwibW91c2VvdXRcIiB8IFwibW91c2VsZWF2ZVwiO1xuXHQvKipcblx0ICogQ2FsbGJhY2sgdG8gY29udHJvbCB0aGUgY2xvc2luZyBiZWhhdmlvdXIuIHJldHVybiBgdHJ1ZWAgdG8gY2xvc2UsIGFuZCBgZmFsc2VgIHRvIHByZXZlbnQgY2xvc2luZ1xuXHQgKi9cblx0c2hvdWxkQ2xvc2U/OiAobWV0YT86IENsb3NlTWV0YSkgPT4gYm9vbGVhbjtcblx0LyoqXG5cdCAqIElmIHRydWUgdGhlIGRpYWxvZyB3aWxsIGNsb3NlIHdoZW4gaGlkZGVuIChieSBzY3JvbGxpbmcgb3Igb3RoZXJ3aXNlIGdvaW5nIG91dCBvZiB0aGUgdmlld3BvcnQpXG5cdCAqIElmIGZhbHNlIHRoZSBkaWFsb2cgd2lsbCBzdGF5IG9wZW4gdW50aWwgZXhwbGljaXRseSBjbG9zZWRcblx0ICogV2hlbiB0cnVlIHRoaXMgY2xvc3VyZSBtZXRob2QgY2FuIGJlIHBpY2tlZCB1cCB2aWEgYENsb3NlUmVhc29ucy5oaWRkZW5gXG5cdCAqL1xuXHRjbG9zZVdoZW5IaWRkZW4/OiBib29sZWFuO1xuXHQvKipcblx0ICogUGFyYW1ldGVyIGRlZmluaW5nIHRoZSBwbGFjZW1lbnQgaW4gd2hpY2ggdGhlIGBEaWFsb2dgIGFwcGVhcnMuXG5cdCAqL1xuXHRwbGFjZW1lbnQ/OiBzdHJpbmc7XG5cdC8qKlxuXHQgKiBVc2VkIHRvIHNldCB0aGUgb2Zmc2V0IG9mIHRoZSBgRGlhbG9nYCByZWxhdGl2ZSB0byB0aGUgY29udGVudCBpdFxuXHQgKiBpcyBhc3NvY2lhdGVkIHRvLlxuXHQgKi9cblx0Z2FwPzogbnVtYmVyO1xuXHQvKipcblx0ICogUmVmZXJlbmNlIHRvIHRoZSBQYXJlbnQgZWxlbWVudCB0aGF0IGxpbmtzIHRoZSBgRGlhbG9nYC5cblx0ICovXG5cdHBhcmVudFJlZj86IEVsZW1lbnRSZWY7XG5cdC8qKlxuXHQgKiBTZXQgdG8gYHRydWVgIHRvIG9wZW4gdGhlIGRpYWxvZyBuZXh0IHRvIHRoZSB0cmlnZ2VyaW5nIGNvbXBvbmVudFxuXHQgKi9cblx0YXBwZW5kSW5saW5lPzogYm9vbGVhbjtcblx0LyoqXG5cdCAqIENvbmZpZyBvYmplY3QgcGFzc2VkIHRvIHRoZSByZW5kZXJlZCBjb21wb25lbnQuIChPcHRpb25hbClcblx0ICovXG5cdGRhdGE/OiBPYmplY3Q7XG5cdC8qKlxuXHQgKiBBZGRpdGlvbmFsIGFyYml0cmFyeSBwcm9wZXJ0aWVzIChtb3N0bHkgZm9yIGludGVybmFsL2V4dGVuZGVkIGNvbXBvbmVudCB1c2UpXG5cdCAqL1xuXHRbcHJvcE5hbWU6IHN0cmluZ106IGFueTtcblx0LyoqXG5cdCAqIENsYXNzZXMgdG8gYWRkIHRvIHRoZSBkaWFsb2cgY29udGFpbmVyXG5cdCAqL1xuXHR3cmFwcGVyQ2xhc3M/OiBzdHJpbmc7XG5cdC8qKlxuXHQgKiBUaGlzIHNwZWNpZmllcyBhbnkgdmVydGljYWwgYW5kIGhvcml6b250YWwgb2Zmc2V0IGZvciB0aGUgcG9zaXRpb24gb2YgdGhlIGRpYWxvZ1xuXHQgKi9cblx0b2Zmc2V0PzogeyB4OiBudW1iZXIsIHk6IG51bWJlciB9O1xuXHQvKipcblx0ICogVGhpcyBwcmV2ZW50cyB0aGUgZGlhbG9nIGZyb20gYmVpbmcgdG9nZ2xlZFxuXHQgKi9cblx0ZGlzYWJsZWQ/OiBib29sZWFuO1xufVxuIl19