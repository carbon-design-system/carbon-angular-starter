import { Directive, HostBinding, Input } from "@angular/core";
import * as i0 from "@angular/core";
export class StackDirective {
    constructor(render, hostElement) {
        this.render = render;
        this.hostElement = hostElement;
        /**
         * Orientation of the items in the stack, defaults to `vertical`
         * Empty string is equivalent to "vertical"
         *
         * Empty string has been added as an option for Angular 16+ to resolve type errors
         */
        this.cdsStack = "vertical";
    }
    get isHorizontal() {
        return this.cdsStack === "horizontal";
    }
    get isVertical() {
        return this.cdsStack === "vertical" || !this.cdsStack;
    }
    /**
     * @deprecated as of v5 - Use `cdsStack` input property instead
     */
    set ibmStack(type) {
        this.cdsStack = type;
    }
    /**
     * Gap in the layout, provide a custom value (string) or a step from the spacing scale (number)
     */
    set gap(num) {
        if (num !== undefined) {
            this.render.removeClass(this.hostElement.nativeElement, `cds--stack-scale-${this._gap}`);
            this.render.addClass(this.hostElement.nativeElement, `cds--stack-scale-${num}`);
            this._gap = num;
        }
    }
}
StackDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: StackDirective, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
StackDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.3.0", type: StackDirective, selector: "[cdsStack], [ibmStack]", inputs: { ibmStack: "ibmStack", cdsStack: "cdsStack", gap: "gap" }, host: { properties: { "class.cds--stack-horizontal": "this.isHorizontal", "class.cds--stack-vertical": "this.isVertical" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: StackDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: "[cdsStack], [ibmStack]"
                }]
        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { isHorizontal: [{
                type: HostBinding,
                args: ["class.cds--stack-horizontal"]
            }], isVertical: [{
                type: HostBinding,
                args: ["class.cds--stack-vertical"]
            }], ibmStack: [{
                type: Input
            }], cdsStack: [{
                type: Input
            }], gap: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhY2suZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xheW91dC9zdGFjay5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNOLFNBQVMsRUFFVCxXQUFXLEVBQ1gsS0FBSyxFQUVMLE1BQU0sZUFBZSxDQUFDOztBQUt2QixNQUFNLE9BQU8sY0FBYztJQXFDMUIsWUFBb0IsTUFBaUIsRUFBVSxXQUF1QjtRQUFsRCxXQUFNLEdBQU4sTUFBTSxDQUFXO1FBQVUsZ0JBQVcsR0FBWCxXQUFXLENBQVk7UUFyQnRFOzs7OztXQUtHO1FBQ00sYUFBUSxHQUFtQyxVQUFVLENBQUM7SUFlVSxDQUFDO0lBcEMxRSxJQUFnRCxZQUFZO1FBQzNELE9BQU8sSUFBSSxDQUFDLFFBQVEsS0FBSyxZQUFZLENBQUM7SUFDdkMsQ0FBQztJQUVELElBQThDLFVBQVU7UUFDdkQsT0FBTyxJQUFJLENBQUMsUUFBUSxLQUFLLFVBQVUsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkQsQ0FBQztJQUVEOztPQUVHO0lBQ0gsSUFBYSxRQUFRLENBQUMsSUFBK0I7UUFDcEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDdEIsQ0FBQztJQVVEOztPQUVHO0lBQ0gsSUFBYSxHQUFHLENBQUMsR0FBVztRQUMzQixJQUFJLEdBQUcsS0FBSyxTQUFTLEVBQUU7WUFDdEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLEVBQUUsb0JBQW9CLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO1lBQ3pGLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxFQUFFLG9CQUFvQixHQUFHLEVBQUUsQ0FBQyxDQUFDO1lBQ2hGLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDO1NBQ2hCO0lBQ0YsQ0FBQzs7MkdBakNXLGNBQWM7K0ZBQWQsY0FBYzsyRkFBZCxjQUFjO2tCQUgxQixTQUFTO21CQUFDO29CQUNWLFFBQVEsRUFBRSx3QkFBd0I7aUJBQ2xDO3lIQUVnRCxZQUFZO3NCQUEzRCxXQUFXO3VCQUFDLDZCQUE2QjtnQkFJSSxVQUFVO3NCQUF2RCxXQUFXO3VCQUFDLDJCQUEyQjtnQkFPM0IsUUFBUTtzQkFBcEIsS0FBSztnQkFVRyxRQUFRO3NCQUFoQixLQUFLO2dCQUtPLEdBQUc7c0JBQWYsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdERpcmVjdGl2ZSxcblx0RWxlbWVudFJlZixcblx0SG9zdEJpbmRpbmcsXG5cdElucHV0LFxuXHRSZW5kZXJlcjJcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuQERpcmVjdGl2ZSh7XG5cdHNlbGVjdG9yOiBcIltjZHNTdGFja10sIFtpYm1TdGFja11cIlxufSlcbmV4cG9ydCBjbGFzcyBTdGFja0RpcmVjdGl2ZSB7XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmNkcy0tc3RhY2staG9yaXpvbnRhbFwiKSBnZXQgaXNIb3Jpem9udGFsKCkge1xuXHRcdHJldHVybiB0aGlzLmNkc1N0YWNrID09PSBcImhvcml6b250YWxcIjtcblx0fVxuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmNkcy0tc3RhY2stdmVydGljYWxcIikgZ2V0IGlzVmVydGljYWwoKSB7XG5cdFx0cmV0dXJuIHRoaXMuY2RzU3RhY2sgPT09IFwidmVydGljYWxcIiB8fCAhdGhpcy5jZHNTdGFjaztcblx0fVxuXG5cdC8qKlxuXHQgKiBAZGVwcmVjYXRlZCBhcyBvZiB2NSAtIFVzZSBgY2RzU3RhY2tgIGlucHV0IHByb3BlcnR5IGluc3RlYWRcblx0ICovXG5cdEBJbnB1dCgpIHNldCBpYm1TdGFjayh0eXBlOiBcInZlcnRpY2FsXCIgfCBcImhvcml6b250YWxcIikge1xuXHRcdHRoaXMuY2RzU3RhY2sgPSB0eXBlO1xuXHR9XG5cblx0LyoqXG5cdCAqIE9yaWVudGF0aW9uIG9mIHRoZSBpdGVtcyBpbiB0aGUgc3RhY2ssIGRlZmF1bHRzIHRvIGB2ZXJ0aWNhbGBcblx0ICogRW1wdHkgc3RyaW5nIGlzIGVxdWl2YWxlbnQgdG8gXCJ2ZXJ0aWNhbFwiXG5cdCAqXG5cdCAqIEVtcHR5IHN0cmluZyBoYXMgYmVlbiBhZGRlZCBhcyBhbiBvcHRpb24gZm9yIEFuZ3VsYXIgMTYrIHRvIHJlc29sdmUgdHlwZSBlcnJvcnNcblx0ICovXG5cdEBJbnB1dCgpIGNkc1N0YWNrOiBcInZlcnRpY2FsXCIgfCBcImhvcml6b250YWxcIiB8IFwiXCIgPSBcInZlcnRpY2FsXCI7XG5cblx0LyoqXG5cdCAqIEdhcCBpbiB0aGUgbGF5b3V0LCBwcm92aWRlIGEgY3VzdG9tIHZhbHVlIChzdHJpbmcpIG9yIGEgc3RlcCBmcm9tIHRoZSBzcGFjaW5nIHNjYWxlIChudW1iZXIpXG5cdCAqL1xuXHRASW5wdXQoKSBzZXQgZ2FwKG51bTogbnVtYmVyKSB7XG5cdFx0aWYgKG51bSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHR0aGlzLnJlbmRlci5yZW1vdmVDbGFzcyh0aGlzLmhvc3RFbGVtZW50Lm5hdGl2ZUVsZW1lbnQsIGBjZHMtLXN0YWNrLXNjYWxlLSR7dGhpcy5fZ2FwfWApO1xuXHRcdFx0dGhpcy5yZW5kZXIuYWRkQ2xhc3ModGhpcy5ob3N0RWxlbWVudC5uYXRpdmVFbGVtZW50LCBgY2RzLS1zdGFjay1zY2FsZS0ke251bX1gKTtcblx0XHRcdHRoaXMuX2dhcCA9IG51bTtcblx0XHR9XG5cdH1cblx0Ly8gVXNlZCB0byB0cmFjayBwcmV2aW91cyB2YWx1ZSBvZiBnYXAgc28gd2UgY2FuIGR5bmFtaWNhbGx5IHJlbW92ZSBjbGFzc1xuXHRwcml2YXRlIF9nYXA7XG5cblx0Y29uc3RydWN0b3IocHJpdmF0ZSByZW5kZXI6IFJlbmRlcmVyMiwgcHJpdmF0ZSBob3N0RWxlbWVudDogRWxlbWVudFJlZikge31cbn1cbiJdfQ==