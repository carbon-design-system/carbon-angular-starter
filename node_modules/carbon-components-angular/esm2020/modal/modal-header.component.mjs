import { Component, Output, EventEmitter, Input } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "carbon-components-angular/i18n";
import * as i2 from "@angular/common";
import * as i3 from "carbon-components-angular/icon";
/**
 * ***Inputs***
 * ```html
 * <cds-modal-header>Header text</cds-modal-header>
 * ```
 *
 * ***Outputs***
 * ```html
 * <cds-modal-header (closeSelect)="closeModal()">Header text</cds-modal-header>
 * ```
 */
export class ModalHeader {
    constructor(i18n) {
        this.i18n = i18n;
        /**
         * @deprecated since v5
         * Sets the style on the modal heading based on its category.
         */
        this.theme = "default";
        /**
         * Accessible label for the header close button.
         * Defaults to the `MODAL.CLOSE` value from the i18n service.
         */
        this.closeLabel = this.i18n.get().MODAL.CLOSE;
        /**
         * Set to `false` to hide the close button.
         */
        this.showCloseButton = true;
        /**
         * To emit the event of clicking on the close icon within the modal.
         */
        this.closeSelect = new EventEmitter();
    }
    /**
     * Handles click for the close icon button within the `Modal`.
     */
    onClose() {
        this.closeSelect.emit();
    }
}
ModalHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ModalHeader, deps: [{ token: i1.I18n }], target: i0.ɵɵFactoryTarget.Component });
ModalHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: ModalHeader, selector: "cds-modal-header, ibm-modal-header", inputs: { theme: "theme", closeLabel: "closeLabel", showCloseButton: "showCloseButton" }, outputs: { closeSelect: "closeSelect" }, ngImport: i0, template: `
		<header class="cds--modal-header {{theme}}">
			<ng-content></ng-content>
			<button
				*ngIf="showCloseButton"
				type="button"
				class="cds--modal-close"
				(click)="onClose()">
				<span class="cds--assistive-text">{{ closeLabel }}</span>
				<svg cdsIcon="close" size="20" class="cds--modal-close__icon"></svg>
			</button>
		</header>

	`, isInline: true, dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.IconDirective, selector: "[cdsIcon], [ibmIcon]", inputs: ["ibmIcon", "cdsIcon", "size", "title", "ariaLabel", "ariaLabelledBy", "ariaHidden", "isFocusable"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ModalHeader, decorators: [{
            type: Component,
            args: [{
                    selector: "cds-modal-header, ibm-modal-header",
                    template: `
		<header class="cds--modal-header {{theme}}">
			<ng-content></ng-content>
			<button
				*ngIf="showCloseButton"
				type="button"
				class="cds--modal-close"
				(click)="onClose()">
				<span class="cds--assistive-text">{{ closeLabel }}</span>
				<svg cdsIcon="close" size="20" class="cds--modal-close__icon"></svg>
			</button>
		</header>

	`
                }]
        }], ctorParameters: function () { return [{ type: i1.I18n }]; }, propDecorators: { theme: [{
                type: Input
            }], closeLabel: [{
                type: Input
            }], showCloseButton: [{
                type: Input
            }], closeSelect: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tb2RhbC9tb2RhbC1oZWFkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTixTQUFTLEVBQ1QsTUFBTSxFQUNOLFlBQVksRUFDWixLQUFLLEVBQ0wsTUFBTSxlQUFlLENBQUM7Ozs7O0FBR3ZCOzs7Ozs7Ozs7O0dBVUc7QUFrQkgsTUFBTSxPQUFPLFdBQVc7SUFxQnZCLFlBQXNCLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBcEJoQzs7O1dBR0c7UUFDTSxVQUFLLEdBQUcsU0FBUyxDQUFDO1FBQzNCOzs7V0FHRztRQUNNLGVBQVUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDbEQ7O1dBRUc7UUFDTSxvQkFBZSxHQUFHLElBQUksQ0FBQztRQUVoQzs7V0FFRztRQUNPLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUVSLENBQUM7SUFFcEM7O09BRUc7SUFDSSxPQUFPO1FBQ2IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN6QixDQUFDOzt3R0E1QlcsV0FBVzs0RkFBWCxXQUFXLDZNQWZiOzs7Ozs7Ozs7Ozs7O0VBYVQ7MkZBRVcsV0FBVztrQkFqQnZCLFNBQVM7bUJBQUM7b0JBQ1YsUUFBUSxFQUFFLG9DQUFvQztvQkFDOUMsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7O0VBYVQ7aUJBQ0Q7MkZBTVMsS0FBSztzQkFBYixLQUFLO2dCQUtHLFVBQVU7c0JBQWxCLEtBQUs7Z0JBSUcsZUFBZTtzQkFBdkIsS0FBSztnQkFLSSxXQUFXO3NCQUFwQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0Q29tcG9uZW50LFxuXHRPdXRwdXQsXG5cdEV2ZW50RW1pdHRlcixcblx0SW5wdXRcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEkxOG4gfSBmcm9tIFwiY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9pMThuXCI7XG5cbi8qKlxuICogKioqSW5wdXRzKioqXG4gKiBgYGBodG1sXG4gKiA8Y2RzLW1vZGFsLWhlYWRlcj5IZWFkZXIgdGV4dDwvY2RzLW1vZGFsLWhlYWRlcj5cbiAqIGBgYFxuICpcbiAqICoqKk91dHB1dHMqKipcbiAqIGBgYGh0bWxcbiAqIDxjZHMtbW9kYWwtaGVhZGVyIChjbG9zZVNlbGVjdCk9XCJjbG9zZU1vZGFsKClcIj5IZWFkZXIgdGV4dDwvY2RzLW1vZGFsLWhlYWRlcj5cbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6IFwiY2RzLW1vZGFsLWhlYWRlciwgaWJtLW1vZGFsLWhlYWRlclwiLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxoZWFkZXIgY2xhc3M9XCJjZHMtLW1vZGFsLWhlYWRlciB7e3RoZW1lfX1cIj5cblx0XHRcdDxuZy1jb250ZW50PjwvbmctY29udGVudD5cblx0XHRcdDxidXR0b25cblx0XHRcdFx0Km5nSWY9XCJzaG93Q2xvc2VCdXR0b25cIlxuXHRcdFx0XHR0eXBlPVwiYnV0dG9uXCJcblx0XHRcdFx0Y2xhc3M9XCJjZHMtLW1vZGFsLWNsb3NlXCJcblx0XHRcdFx0KGNsaWNrKT1cIm9uQ2xvc2UoKVwiPlxuXHRcdFx0XHQ8c3BhbiBjbGFzcz1cImNkcy0tYXNzaXN0aXZlLXRleHRcIj57eyBjbG9zZUxhYmVsIH19PC9zcGFuPlxuXHRcdFx0XHQ8c3ZnIGNkc0ljb249XCJjbG9zZVwiIHNpemU9XCIyMFwiIGNsYXNzPVwiY2RzLS1tb2RhbC1jbG9zZV9faWNvblwiPjwvc3ZnPlxuXHRcdFx0PC9idXR0b24+XG5cdFx0PC9oZWFkZXI+XG5cblx0YFxufSlcbmV4cG9ydCBjbGFzcyBNb2RhbEhlYWRlciB7XG5cdC8qKlxuXHQgKiBAZGVwcmVjYXRlZCBzaW5jZSB2NVxuXHQgKiBTZXRzIHRoZSBzdHlsZSBvbiB0aGUgbW9kYWwgaGVhZGluZyBiYXNlZCBvbiBpdHMgY2F0ZWdvcnkuXG5cdCAqL1xuXHRASW5wdXQoKSB0aGVtZSA9IFwiZGVmYXVsdFwiO1xuXHQvKipcblx0ICogQWNjZXNzaWJsZSBsYWJlbCBmb3IgdGhlIGhlYWRlciBjbG9zZSBidXR0b24uXG5cdCAqIERlZmF1bHRzIHRvIHRoZSBgTU9EQUwuQ0xPU0VgIHZhbHVlIGZyb20gdGhlIGkxOG4gc2VydmljZS5cblx0ICovXG5cdEBJbnB1dCgpIGNsb3NlTGFiZWwgPSB0aGlzLmkxOG4uZ2V0KCkuTU9EQUwuQ0xPU0U7XG5cdC8qKlxuXHQgKiBTZXQgdG8gYGZhbHNlYCB0byBoaWRlIHRoZSBjbG9zZSBidXR0b24uXG5cdCAqL1xuXHRASW5wdXQoKSBzaG93Q2xvc2VCdXR0b24gPSB0cnVlO1xuXG5cdC8qKlxuXHQgKiBUbyBlbWl0IHRoZSBldmVudCBvZiBjbGlja2luZyBvbiB0aGUgY2xvc2UgaWNvbiB3aXRoaW4gdGhlIG1vZGFsLlxuXHQgKi9cblx0QE91dHB1dCgpIGNsb3NlU2VsZWN0ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG5cdGNvbnN0cnVjdG9yKHByb3RlY3RlZCBpMThuOiBJMThuKSB7fVxuXG5cdC8qKlxuXHQgKiBIYW5kbGVzIGNsaWNrIGZvciB0aGUgY2xvc2UgaWNvbiBidXR0b24gd2l0aGluIHRoZSBgTW9kYWxgLlxuXHQgKi9cblx0cHVibGljIG9uQ2xvc2UoKSB7XG5cdFx0dGhpcy5jbG9zZVNlbGVjdC5lbWl0KCk7XG5cdH1cbn1cbiJdfQ==