import { Component, Input, HostBinding } from "@angular/core";
import * as i0 from "@angular/core";
/**
 * Component that represents a tag for labelling/categorizing using keywords
 *
 * [See demo](../../?path=/story/components-tag--basic)
 */
export class Tag {
    constructor() {
        /**
         * Type of the tag determines the styling
         */
        this.type = "gray";
        /**
         * Tag render size
         */
        this.size = "md";
        this.class = "";
    }
    get attrClass() {
        return `cds--tag cds--tag--${this.type} cds--tag--${this.size} cds--layout--size-${this.size} ${this.class}`;
    }
}
Tag.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: Tag, deps: [], target: i0.ɵɵFactoryTarget.Component });
Tag.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: Tag, selector: "cds-tag, ibm-tag", inputs: { type: "type", size: "size", class: "class" }, host: { properties: { "attr.class": "this.attrClass" } }, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: Tag, decorators: [{
            type: Component,
            args: [{
                    selector: "cds-tag, ibm-tag",
                    template: `<ng-content></ng-content>`
                }]
        }], propDecorators: { type: [{
                type: Input
            }], size: [{
                type: Input
            }], class: [{
                type: Input
            }], attrClass: [{
                type: HostBinding,
                args: ["attr.class"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YWcvdGFnLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULEtBQUssRUFDTCxXQUFXLEVBQ1gsTUFBTSxlQUFlLENBQUM7O0FBa0J2Qjs7OztHQUlHO0FBS0gsTUFBTSxPQUFPLEdBQUc7SUFKaEI7UUFLQzs7V0FFRztRQUNNLFNBQUksR0FBWSxNQUFNLENBQUM7UUFFaEM7O1dBRUc7UUFDTSxTQUFJLEdBQWdCLElBQUksQ0FBQztRQUV6QixVQUFLLEdBQUcsRUFBRSxDQUFDO0tBS3BCO0lBSEEsSUFBK0IsU0FBUztRQUN2QyxPQUFPLHNCQUFzQixJQUFJLENBQUMsSUFBSSxjQUFjLElBQUksQ0FBQyxJQUFJLHNCQUFzQixJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUM5RyxDQUFDOztnR0FmVyxHQUFHO29GQUFILEdBQUcsMEtBRkwsMkJBQTJCOzJGQUV6QixHQUFHO2tCQUpmLFNBQVM7bUJBQUM7b0JBQ1YsUUFBUSxFQUFFLGtCQUFrQjtvQkFDNUIsUUFBUSxFQUFFLDJCQUEyQjtpQkFDckM7OEJBS1MsSUFBSTtzQkFBWixLQUFLO2dCQUtHLElBQUk7c0JBQVosS0FBSztnQkFFRyxLQUFLO3NCQUFiLEtBQUs7Z0JBRXlCLFNBQVM7c0JBQXZDLFdBQVc7dUJBQUMsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdENvbXBvbmVudCxcblx0SW5wdXQsXG5cdEhvc3RCaW5kaW5nXG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbi8qKlxuICogU3VwcG9ydGVkIHRhZyB0eXBlcyBmb3IgY2FyYm9uIHYxMFxuICovXG5leHBvcnQgdHlwZSBUYWdUeXBlID0gXCJyZWRcIiB8XG5cdFwibWFnZW50YVwiIHxcblx0XCJwdXJwbGVcIiB8XG5cdFwiYmx1ZVwiIHxcblx0XCJjeWFuXCIgfFxuXHRcInRlYWxcIiB8XG5cdFwiZ3JlZW5cIiB8XG5cdFwiZ3JheVwiIHxcblx0XCJjb29sLWdyYXlcIiB8XG5cdFwid2FybS1ncmF5XCIgfFxuXHRcImhpZ2gtY29udHJhc3RcIiB8XG5cdFwib3V0bGluZVwiO1xuXG4vKipcbiAqIENvbXBvbmVudCB0aGF0IHJlcHJlc2VudHMgYSB0YWcgZm9yIGxhYmVsbGluZy9jYXRlZ29yaXppbmcgdXNpbmcga2V5d29yZHNcbiAqXG4gKiBbU2VlIGRlbW9dKC4uLy4uLz9wYXRoPS9zdG9yeS9jb21wb25lbnRzLXRhZy0tYmFzaWMpXG4gKi9cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJjZHMtdGFnLCBpYm0tdGFnXCIsXG5cdHRlbXBsYXRlOiBgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PmBcbn0pXG5leHBvcnQgY2xhc3MgVGFnIHtcblx0LyoqXG5cdCAqIFR5cGUgb2YgdGhlIHRhZyBkZXRlcm1pbmVzIHRoZSBzdHlsaW5nXG5cdCAqL1xuXHRASW5wdXQoKSB0eXBlOiBUYWdUeXBlID0gXCJncmF5XCI7XG5cblx0LyoqXG5cdCAqIFRhZyByZW5kZXIgc2l6ZVxuXHQgKi9cblx0QElucHV0KCkgc2l6ZTogXCJzbVwiIHwgXCJtZFwiID0gXCJtZFwiO1xuXG5cdEBJbnB1dCgpIGNsYXNzID0gXCJcIjtcblxuXHRASG9zdEJpbmRpbmcoXCJhdHRyLmNsYXNzXCIpIGdldCBhdHRyQ2xhc3MoKSB7XG5cdFx0cmV0dXJuIGBjZHMtLXRhZyBjZHMtLXRhZy0tJHt0aGlzLnR5cGV9IGNkcy0tdGFnLS0ke3RoaXMuc2l6ZX0gY2RzLS1sYXlvdXQtLXNpemUtJHt0aGlzLnNpemV9ICR7dGhpcy5jbGFzc31gO1xuXHR9XG59XG4iXX0=