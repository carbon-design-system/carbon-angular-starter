import { Component, Input, HostBinding } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "carbon-components-angular/i18n";
import * as i2 from "@angular/common";
/**
 * [See demo](../../?path=/story/components-loading--basic)
 */
export class Loading {
    constructor(i18n) {
        this.i18n = i18n;
        /**
         * Accessible title for the loading circle.
         * Defaults to the `LOADING.TITLE` value from the i18n service.
         */
        this.title = this.i18n.get().LOADING.TITLE;
        /**
         * set to `false` to stop the loading animation
         */
        this.isActive = true;
        /**
         * Specify the size of the button
         */
        this.size = "normal";
        /**
         * Set to `true` to make loader with an overlay.
         */
        this.overlay = false;
    }
}
Loading.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: Loading, deps: [{ token: i1.I18n }], target: i0.ɵɵFactoryTarget.Component });
Loading.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: Loading, selector: "cds-loading, ibm-loading", inputs: { title: "title", isActive: "isActive", size: "size", overlay: "overlay" }, host: { properties: { "class.cds--loading-overlay": "this.overlay" } }, ngImport: i0, template: `
		<div
			[ngClass]="{
				'cds--loading--small': size === 'sm',
				'cds--loading--stop': !isActive && !overlay,
				'cds--loading-overlay--stop': !isActive && overlay
			}"
			class="cds--loading">
			<svg class="cds--loading__svg" viewBox="0 0 100 100">
				<title>{{title}}</title>
				<circle class="cds--loading__stroke" cx="50%" cy="50%" r="44" />
			</svg>
		</div>
	`, isInline: true, dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: Loading, decorators: [{
            type: Component,
            args: [{
                    selector: "cds-loading, ibm-loading",
                    template: `
		<div
			[ngClass]="{
				'cds--loading--small': size === 'sm',
				'cds--loading--stop': !isActive && !overlay,
				'cds--loading-overlay--stop': !isActive && overlay
			}"
			class="cds--loading">
			<svg class="cds--loading__svg" viewBox="0 0 100 100">
				<title>{{title}}</title>
				<circle class="cds--loading__stroke" cx="50%" cy="50%" r="44" />
			</svg>
		</div>
	`
                }]
        }], ctorParameters: function () { return [{ type: i1.I18n }]; }, propDecorators: { title: [{
                type: Input
            }], isActive: [{
                type: Input
            }], size: [{
                type: Input
            }], overlay: [{
                type: Input
            }, {
                type: HostBinding,
                args: ["class.cds--loading-overlay"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbG9hZGluZy9sb2FkaW5nLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFHOUQ7O0dBRUc7QUFrQkgsTUFBTSxPQUFPLE9BQU87SUFzQm5CLFlBQXNCLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBckJoQzs7O1dBR0c7UUFDTSxVQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBRS9DOztXQUVHO1FBQ00sYUFBUSxHQUFHLElBQUksQ0FBQztRQUV6Qjs7V0FFRztRQUNNLFNBQUksR0FBb0IsUUFBUSxDQUFDO1FBRTFDOztXQUVHO1FBQ2lELFlBQU8sR0FBRyxLQUFLLENBQUM7SUFFakMsQ0FBQzs7b0dBdEJ4QixPQUFPO3dGQUFQLE9BQU8sNE5BZlQ7Ozs7Ozs7Ozs7Ozs7RUFhVDsyRkFFVyxPQUFPO2tCQWpCbkIsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUsMEJBQTBCO29CQUNwQyxRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7RUFhVDtpQkFDRDsyRkFNUyxLQUFLO3NCQUFiLEtBQUs7Z0JBS0csUUFBUTtzQkFBaEIsS0FBSztnQkFLRyxJQUFJO3NCQUFaLEtBQUs7Z0JBSzhDLE9BQU87c0JBQTFELEtBQUs7O3NCQUFJLFdBQVc7dUJBQUMsNEJBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgSG9zdEJpbmRpbmcgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgSTE4biB9IGZyb20gXCJjYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2kxOG5cIjtcblxuLyoqXG4gKiBbU2VlIGRlbW9dKC4uLy4uLz9wYXRoPS9zdG9yeS9jb21wb25lbnRzLWxvYWRpbmctLWJhc2ljKVxuICovXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6IFwiY2RzLWxvYWRpbmcsIGlibS1sb2FkaW5nXCIsXG5cdHRlbXBsYXRlOiBgXG5cdFx0PGRpdlxuXHRcdFx0W25nQ2xhc3NdPVwie1xuXHRcdFx0XHQnY2RzLS1sb2FkaW5nLS1zbWFsbCc6IHNpemUgPT09ICdzbScsXG5cdFx0XHRcdCdjZHMtLWxvYWRpbmctLXN0b3AnOiAhaXNBY3RpdmUgJiYgIW92ZXJsYXksXG5cdFx0XHRcdCdjZHMtLWxvYWRpbmctb3ZlcmxheS0tc3RvcCc6ICFpc0FjdGl2ZSAmJiBvdmVybGF5XG5cdFx0XHR9XCJcblx0XHRcdGNsYXNzPVwiY2RzLS1sb2FkaW5nXCI+XG5cdFx0XHQ8c3ZnIGNsYXNzPVwiY2RzLS1sb2FkaW5nX19zdmdcIiB2aWV3Qm94PVwiMCAwIDEwMCAxMDBcIj5cblx0XHRcdFx0PHRpdGxlPnt7dGl0bGV9fTwvdGl0bGU+XG5cdFx0XHRcdDxjaXJjbGUgY2xhc3M9XCJjZHMtLWxvYWRpbmdfX3N0cm9rZVwiIGN4PVwiNTAlXCIgY3k9XCI1MCVcIiByPVwiNDRcIiAvPlxuXHRcdFx0PC9zdmc+XG5cdFx0PC9kaXY+XG5cdGBcbn0pXG5leHBvcnQgY2xhc3MgTG9hZGluZyB7XG5cdC8qKlxuXHQgKiBBY2Nlc3NpYmxlIHRpdGxlIGZvciB0aGUgbG9hZGluZyBjaXJjbGUuXG5cdCAqIERlZmF1bHRzIHRvIHRoZSBgTE9BRElORy5USVRMRWAgdmFsdWUgZnJvbSB0aGUgaTE4biBzZXJ2aWNlLlxuXHQgKi9cblx0QElucHV0KCkgdGl0bGUgPSB0aGlzLmkxOG4uZ2V0KCkuTE9BRElORy5USVRMRTtcblxuXHQvKipcblx0ICogc2V0IHRvIGBmYWxzZWAgdG8gc3RvcCB0aGUgbG9hZGluZyBhbmltYXRpb25cblx0ICovXG5cdEBJbnB1dCgpIGlzQWN0aXZlID0gdHJ1ZTtcblxuXHQvKipcblx0ICogU3BlY2lmeSB0aGUgc2l6ZSBvZiB0aGUgYnV0dG9uXG5cdCAqL1xuXHRASW5wdXQoKSBzaXplOiBcIm5vcm1hbFwiIHwgXCJzbVwiID0gXCJub3JtYWxcIjtcblxuXHQvKipcblx0ICogU2V0IHRvIGB0cnVlYCB0byBtYWtlIGxvYWRlciB3aXRoIGFuIG92ZXJsYXkuXG5cdCAqL1xuXHRASW5wdXQoKSBASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLWxvYWRpbmctb3ZlcmxheVwiKSBvdmVybGF5ID0gZmFsc2U7XG5cblx0Y29uc3RydWN0b3IocHJvdGVjdGVkIGkxOG46IEkxOG4pIHt9XG59XG4iXX0=