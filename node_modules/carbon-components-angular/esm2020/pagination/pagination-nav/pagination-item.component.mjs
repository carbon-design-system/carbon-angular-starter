import { Component, Input, Output, EventEmitter } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
/**
 * Used to present a single navigation item in a pagination list
 *
 *  * ```html
 * <cds-pagination-nav-item [page]="5" [isActive]="false" (click)="handleClick(value)"></cds-pagination-nav-item>
 * ```
 */
export class PaginationNavItem {
    constructor() {
        /**
         * The page for this component to dipslay
         */
        this.page = 0;
        /**
         * The state for this component to dipslay
         */
        this.isActive = false;
        /**
         * Emits click event
         */
        this.click = new EventEmitter();
    }
}
PaginationNavItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: PaginationNavItem, deps: [], target: i0.ɵɵFactoryTarget.Component });
PaginationNavItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: PaginationNavItem, selector: "cds-pagination-nav-item, ibm-pagination-nav-item", inputs: { page: "page", isActive: "isActive" }, outputs: { click: "click" }, ngImport: i0, template: `
		<li class="cds--pagination-nav__list-item">
			<button
				type="button"
				class="cds--pagination-nav__page"
				[ngClass]="{ 'cds--pagination-nav__page--active': isActive }"
				(click)="click.emit(page)">
				<span class="cds--pagination-nav__accessibility-label">
					{{page}}
				</span>
				{{page}}
			</button>
		</li>
	`, isInline: true, dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: PaginationNavItem, decorators: [{
            type: Component,
            args: [{
                    selector: "cds-pagination-nav-item, ibm-pagination-nav-item",
                    template: `
		<li class="cds--pagination-nav__list-item">
			<button
				type="button"
				class="cds--pagination-nav__page"
				[ngClass]="{ 'cds--pagination-nav__page--active': isActive }"
				(click)="click.emit(page)">
				<span class="cds--pagination-nav__accessibility-label">
					{{page}}
				</span>
				{{page}}
			</button>
		</li>
	`
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { page: [{
                type: Input
            }], isActive: [{
                type: Input
            }], click: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wYWdpbmF0aW9uL3BhZ2luYXRpb24tbmF2L3BhZ2luYXRpb24taXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNOLFNBQVMsRUFDVCxLQUFLLEVBQ0wsTUFBTSxFQUNOLFlBQVksRUFDWixNQUFNLGVBQWUsQ0FBQzs7O0FBRXZCOzs7Ozs7R0FNRztBQWtCSCxNQUFNLE9BQU8saUJBQWlCO0lBZ0I3QjtRQWZBOztXQUVHO1FBQ00sU0FBSSxHQUFHLENBQUMsQ0FBQztRQUVsQjs7V0FFRztRQUNNLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFFMUI7O1dBRUc7UUFDTyxVQUFLLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztJQUU5QixDQUFDOzs4R0FoQkosaUJBQWlCO2tHQUFqQixpQkFBaUIscUtBZm5COzs7Ozs7Ozs7Ozs7O0VBYVQ7MkZBRVcsaUJBQWlCO2tCQWpCN0IsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUsa0RBQWtEO29CQUM1RCxRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7RUFhVDtpQkFDRDswRUFLUyxJQUFJO3NCQUFaLEtBQUs7Z0JBS0csUUFBUTtzQkFBaEIsS0FBSztnQkFLSSxLQUFLO3NCQUFkLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdElucHV0LFxuXHRPdXRwdXQsXG5cdEV2ZW50RW1pdHRlclxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG4vKipcbiAqIFVzZWQgdG8gcHJlc2VudCBhIHNpbmdsZSBuYXZpZ2F0aW9uIGl0ZW0gaW4gYSBwYWdpbmF0aW9uIGxpc3RcbiAqXG4gKiAgKiBgYGBodG1sXG4gKiA8Y2RzLXBhZ2luYXRpb24tbmF2LWl0ZW0gW3BhZ2VdPVwiNVwiIFtpc0FjdGl2ZV09XCJmYWxzZVwiIChjbGljayk9XCJoYW5kbGVDbGljayh2YWx1ZSlcIj48L2Nkcy1wYWdpbmF0aW9uLW5hdi1pdGVtPlxuICogYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJjZHMtcGFnaW5hdGlvbi1uYXYtaXRlbSwgaWJtLXBhZ2luYXRpb24tbmF2LWl0ZW1cIixcblx0dGVtcGxhdGU6IGBcblx0XHQ8bGkgY2xhc3M9XCJjZHMtLXBhZ2luYXRpb24tbmF2X19saXN0LWl0ZW1cIj5cblx0XHRcdDxidXR0b25cblx0XHRcdFx0dHlwZT1cImJ1dHRvblwiXG5cdFx0XHRcdGNsYXNzPVwiY2RzLS1wYWdpbmF0aW9uLW5hdl9fcGFnZVwiXG5cdFx0XHRcdFtuZ0NsYXNzXT1cInsgJ2Nkcy0tcGFnaW5hdGlvbi1uYXZfX3BhZ2UtLWFjdGl2ZSc6IGlzQWN0aXZlIH1cIlxuXHRcdFx0XHQoY2xpY2spPVwiY2xpY2suZW1pdChwYWdlKVwiPlxuXHRcdFx0XHQ8c3BhbiBjbGFzcz1cImNkcy0tcGFnaW5hdGlvbi1uYXZfX2FjY2Vzc2liaWxpdHktbGFiZWxcIj5cblx0XHRcdFx0XHR7e3BhZ2V9fVxuXHRcdFx0XHQ8L3NwYW4+XG5cdFx0XHRcdHt7cGFnZX19XG5cdFx0XHQ8L2J1dHRvbj5cblx0XHQ8L2xpPlxuXHRgXG59KVxuZXhwb3J0IGNsYXNzIFBhZ2luYXRpb25OYXZJdGVtIHtcblx0LyoqXG5cdCAqIFRoZSBwYWdlIGZvciB0aGlzIGNvbXBvbmVudCB0byBkaXBzbGF5XG5cdCAqL1xuXHRASW5wdXQoKSBwYWdlID0gMDtcblxuXHQvKipcblx0ICogVGhlIHN0YXRlIGZvciB0aGlzIGNvbXBvbmVudCB0byBkaXBzbGF5XG5cdCAqL1xuXHRASW5wdXQoKSBpc0FjdGl2ZSA9IGZhbHNlO1xuXG5cdC8qKlxuXHQgKiBFbWl0cyBjbGljayBldmVudFxuXHQgKi9cblx0QE91dHB1dCgpIGNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjxudW1iZXI+KCk7XG5cblx0Y29uc3RydWN0b3IoKSB7fVxufVxuIl19