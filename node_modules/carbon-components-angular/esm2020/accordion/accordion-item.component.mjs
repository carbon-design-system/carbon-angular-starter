import { Component, Input, HostBinding, Output, TemplateRef, EventEmitter } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "carbon-components-angular/icon";
export class AccordionItem {
    constructor() {
        this.context = null;
        this.id = `accordion-item-${AccordionItem.accordionItemCount++}`;
        this.skeleton = false;
        this.selected = new EventEmitter();
        this.itemClass = true;
        this.expanded = false;
        this.disabled = false;
        this.role = "listitem";
    }
    toggleExpanded() {
        if (!this.skeleton) {
            this.expanded = !this.expanded;
            this.selected.emit({ id: this.id, expanded: this.expanded });
        }
    }
    isTemplate(value) {
        return value instanceof TemplateRef;
    }
}
AccordionItem.accordionItemCount = 0;
AccordionItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: AccordionItem, deps: [], target: i0.ɵɵFactoryTarget.Component });
AccordionItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: AccordionItem, selector: "cds-accordion-item, ibm-accordion-item", inputs: { title: "title", context: "context", id: "id", skeleton: "skeleton", expanded: "expanded", disabled: "disabled" }, outputs: { selected: "selected" }, host: { properties: { "class.cds--accordion__item": "this.itemClass", "class.cds--accordion__item--active": "this.expanded", "class.cds--accordion__item--disabled": "this.disabled", "attr.role": "this.role" } }, ngImport: i0, template: `
		<button
			type="button"
			[disabled]="disabled"
			[attr.aria-expanded]="expanded"
			[attr.aria-controls]="id"
			(click)="toggleExpanded()"
			class="cds--accordion__heading">
			<svg cdsIcon="chevron--right" size="16" class="cds--accordion__arrow"></svg>
			<p *ngIf="!isTemplate(title)"
				class="cds--accordion__title"
				[ngClass]="{
					'cds--skeleton__text': skeleton
				}">
				{{!skeleton ? title : null}}
			</p>
			<ng-template
				*ngIf="isTemplate(title)"
				[ngTemplateOutlet]="title"
				[ngTemplateOutletContext]="context">
			</ng-template>
		</button>
		<div [id]="id" class="cds--accordion__content">
			<ng-content *ngIf="!skeleton; else skeletonTemplate"></ng-content>
			<ng-template #skeletonTemplate>
				<p class="cds--skeleton__text" style="width: 90%"></p>
				<p class="cds--skeleton__text" style="width: 80%"></p>
				<p class="cds--skeleton__text" style="width: 95%"></p>
			</ng-template>
		</div>
	`, isInline: true, styles: [":host{display:list-item}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i2.IconDirective, selector: "[cdsIcon], [ibmIcon]", inputs: ["ibmIcon", "cdsIcon", "size", "title", "ariaLabel", "ariaLabelledBy", "ariaHidden", "isFocusable"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: AccordionItem, decorators: [{
            type: Component,
            args: [{ selector: "cds-accordion-item, ibm-accordion-item", template: `
		<button
			type="button"
			[disabled]="disabled"
			[attr.aria-expanded]="expanded"
			[attr.aria-controls]="id"
			(click)="toggleExpanded()"
			class="cds--accordion__heading">
			<svg cdsIcon="chevron--right" size="16" class="cds--accordion__arrow"></svg>
			<p *ngIf="!isTemplate(title)"
				class="cds--accordion__title"
				[ngClass]="{
					'cds--skeleton__text': skeleton
				}">
				{{!skeleton ? title : null}}
			</p>
			<ng-template
				*ngIf="isTemplate(title)"
				[ngTemplateOutlet]="title"
				[ngTemplateOutletContext]="context">
			</ng-template>
		</button>
		<div [id]="id" class="cds--accordion__content">
			<ng-content *ngIf="!skeleton; else skeletonTemplate"></ng-content>
			<ng-template #skeletonTemplate>
				<p class="cds--skeleton__text" style="width: 90%"></p>
				<p class="cds--skeleton__text" style="width: 80%"></p>
				<p class="cds--skeleton__text" style="width: 95%"></p>
			</ng-template>
		</div>
	`, styles: [":host{display:list-item}\n"] }]
        }], propDecorators: { title: [{
                type: Input
            }], context: [{
                type: Input
            }], id: [{
                type: Input
            }], skeleton: [{
                type: Input
            }], selected: [{
                type: Output
            }], itemClass: [{
                type: HostBinding,
                args: ["class.cds--accordion__item"]
            }], expanded: [{
                type: HostBinding,
                args: ["class.cds--accordion__item--active"]
            }, {
                type: Input
            }], disabled: [{
                type: HostBinding,
                args: ["class.cds--accordion__item--disabled"]
            }, {
                type: Input
            }], role: [{
                type: HostBinding,
                args: ["attr.role"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2FjY29yZGlvbi9hY2NvcmRpb24taXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNOLFNBQVMsRUFDVCxLQUFLLEVBQ0wsV0FBVyxFQUNYLE1BQU0sRUFDTixXQUFXLEVBQ1gsWUFBWSxFQUNaLE1BQU0sZUFBZSxDQUFDOzs7O0FBeUN2QixNQUFNLE9BQU8sYUFBYTtJQXZDMUI7UUEwQ1UsWUFBTyxHQUFrQixJQUFJLENBQUM7UUFDOUIsT0FBRSxHQUFHLGtCQUFrQixhQUFhLENBQUMsa0JBQWtCLEVBQUUsRUFBRSxDQUFDO1FBQzVELGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDaEIsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFRyxjQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ0EsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNmLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDckQsU0FBSSxHQUFHLFVBQVUsQ0FBQztLQVk1QztJQVZPLGNBQWM7UUFDcEIsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7WUFDL0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBQyxDQUFDLENBQUM7U0FDM0Q7SUFDRixDQUFDO0lBRU0sVUFBVSxDQUFDLEtBQUs7UUFDdEIsT0FBTyxLQUFLLFlBQVksV0FBVyxDQUFDO0lBQ3JDLENBQUM7O0FBckJNLGdDQUFrQixHQUFHLENBQUMsQ0FBQzswR0FEbEIsYUFBYTs4RkFBYixhQUFhLGljQXJDZjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBOEJUOzJGQU9XLGFBQWE7a0JBdkN6QixTQUFTOytCQUNDLHdDQUF3QyxZQUN4Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBOEJUOzhCQVNRLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxPQUFPO3NCQUFmLEtBQUs7Z0JBQ0csRUFBRTtzQkFBVixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ0ksUUFBUTtzQkFBakIsTUFBTTtnQkFFb0MsU0FBUztzQkFBbkQsV0FBVzt1QkFBQyw0QkFBNEI7Z0JBQ21CLFFBQVE7c0JBQW5FLFdBQVc7dUJBQUMsb0NBQW9DOztzQkFBRyxLQUFLO2dCQUNLLFFBQVE7c0JBQXJFLFdBQVc7dUJBQUMsc0NBQXNDOztzQkFBRyxLQUFLO2dCQUNqQyxJQUFJO3NCQUE3QixXQUFXO3VCQUFDLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdElucHV0LFxuXHRIb3N0QmluZGluZyxcblx0T3V0cHV0LFxuXHRUZW1wbGF0ZVJlZixcblx0RXZlbnRFbWl0dGVyXG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJjZHMtYWNjb3JkaW9uLWl0ZW0sIGlibS1hY2NvcmRpb24taXRlbVwiLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxidXR0b25cblx0XHRcdHR5cGU9XCJidXR0b25cIlxuXHRcdFx0W2Rpc2FibGVkXT1cImRpc2FibGVkXCJcblx0XHRcdFthdHRyLmFyaWEtZXhwYW5kZWRdPVwiZXhwYW5kZWRcIlxuXHRcdFx0W2F0dHIuYXJpYS1jb250cm9sc109XCJpZFwiXG5cdFx0XHQoY2xpY2spPVwidG9nZ2xlRXhwYW5kZWQoKVwiXG5cdFx0XHRjbGFzcz1cImNkcy0tYWNjb3JkaW9uX19oZWFkaW5nXCI+XG5cdFx0XHQ8c3ZnIGNkc0ljb249XCJjaGV2cm9uLS1yaWdodFwiIHNpemU9XCIxNlwiIGNsYXNzPVwiY2RzLS1hY2NvcmRpb25fX2Fycm93XCI+PC9zdmc+XG5cdFx0XHQ8cCAqbmdJZj1cIiFpc1RlbXBsYXRlKHRpdGxlKVwiXG5cdFx0XHRcdGNsYXNzPVwiY2RzLS1hY2NvcmRpb25fX3RpdGxlXCJcblx0XHRcdFx0W25nQ2xhc3NdPVwie1xuXHRcdFx0XHRcdCdjZHMtLXNrZWxldG9uX190ZXh0Jzogc2tlbGV0b25cblx0XHRcdFx0fVwiPlxuXHRcdFx0XHR7eyFza2VsZXRvbiA/IHRpdGxlIDogbnVsbH19XG5cdFx0XHQ8L3A+XG5cdFx0XHQ8bmctdGVtcGxhdGVcblx0XHRcdFx0Km5nSWY9XCJpc1RlbXBsYXRlKHRpdGxlKVwiXG5cdFx0XHRcdFtuZ1RlbXBsYXRlT3V0bGV0XT1cInRpdGxlXCJcblx0XHRcdFx0W25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cImNvbnRleHRcIj5cblx0XHRcdDwvbmctdGVtcGxhdGU+XG5cdFx0PC9idXR0b24+XG5cdFx0PGRpdiBbaWRdPVwiaWRcIiBjbGFzcz1cImNkcy0tYWNjb3JkaW9uX19jb250ZW50XCI+XG5cdFx0XHQ8bmctY29udGVudCAqbmdJZj1cIiFza2VsZXRvbjsgZWxzZSBza2VsZXRvblRlbXBsYXRlXCI+PC9uZy1jb250ZW50PlxuXHRcdFx0PG5nLXRlbXBsYXRlICNza2VsZXRvblRlbXBsYXRlPlxuXHRcdFx0XHQ8cCBjbGFzcz1cImNkcy0tc2tlbGV0b25fX3RleHRcIiBzdHlsZT1cIndpZHRoOiA5MCVcIj48L3A+XG5cdFx0XHRcdDxwIGNsYXNzPVwiY2RzLS1za2VsZXRvbl9fdGV4dFwiIHN0eWxlPVwid2lkdGg6IDgwJVwiPjwvcD5cblx0XHRcdFx0PHAgY2xhc3M9XCJjZHMtLXNrZWxldG9uX190ZXh0XCIgc3R5bGU9XCJ3aWR0aDogOTUlXCI+PC9wPlxuXHRcdFx0PC9uZy10ZW1wbGF0ZT5cblx0XHQ8L2Rpdj5cblx0YCxcblx0c3R5bGVzOiBbYFxuXHRcdDpob3N0IHtcblx0XHRcdGRpc3BsYXk6IGxpc3QtaXRlbTtcblx0XHR9XG5cdGBdXG59KVxuZXhwb3J0IGNsYXNzIEFjY29yZGlvbkl0ZW0ge1xuXHRzdGF0aWMgYWNjb3JkaW9uSXRlbUNvdW50ID0gMDtcblx0QElucHV0KCkgdGl0bGU6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT47XG5cdEBJbnB1dCgpIGNvbnRleHQ6IE9iamVjdCB8IG51bGwgPSBudWxsO1xuXHRASW5wdXQoKSBpZCA9IGBhY2NvcmRpb24taXRlbS0ke0FjY29yZGlvbkl0ZW0uYWNjb3JkaW9uSXRlbUNvdW50Kyt9YDtcblx0QElucHV0KCkgc2tlbGV0b24gPSBmYWxzZTtcblx0QE91dHB1dCgpIHNlbGVjdGVkID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmNkcy0tYWNjb3JkaW9uX19pdGVtXCIpIGl0ZW1DbGFzcyA9IHRydWU7XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmNkcy0tYWNjb3JkaW9uX19pdGVtLS1hY3RpdmVcIikgQElucHV0KCkgZXhwYW5kZWQgPSBmYWxzZTtcblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuY2RzLS1hY2NvcmRpb25fX2l0ZW0tLWRpc2FibGVkXCIpIEBJbnB1dCgpIGRpc2FibGVkID0gZmFsc2U7XG5cdEBIb3N0QmluZGluZyhcImF0dHIucm9sZVwiKSByb2xlID0gXCJsaXN0aXRlbVwiO1xuXG5cdHB1YmxpYyB0b2dnbGVFeHBhbmRlZCgpIHtcblx0XHRpZiAoIXRoaXMuc2tlbGV0b24pIHtcblx0XHRcdHRoaXMuZXhwYW5kZWQgPSAhdGhpcy5leHBhbmRlZDtcblx0XHRcdHRoaXMuc2VsZWN0ZWQuZW1pdCh7aWQ6IHRoaXMuaWQsIGV4cGFuZGVkOiB0aGlzLmV4cGFuZGVkfSk7XG5cdFx0fVxuXHR9XG5cblx0cHVibGljIGlzVGVtcGxhdGUodmFsdWUpIHtcblx0XHRyZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBUZW1wbGF0ZVJlZjtcblx0fVxufVxuIl19