import { Directive, EventEmitter, HostBinding, Input, Output } from "@angular/core";
import * as i0 from "@angular/core";
/**
 * Applies popover container styling to the element it is applied to.
 *
 * [See demo](../../?path=/story/components-popover--basic)
 */
export class PopoverContainer {
    constructor() {
        /**
         * Emits an event when the dialog is closed
         */
        this.onClose = new EventEmitter();
        /**
         * Emits an event when the dialog is opened
         */
        this.onOpen = new EventEmitter();
        /**
         * Emits an event when the state of `isOpen` changes. Allows `isOpen` to be double bound
         */
        this.isOpenChange = new EventEmitter();
        this.caret = true;
        this.dropShadow = true;
        this.highContrast = false;
        this.isOpen = false;
        this.containerClass = true;
        this.align = "bottom";
    }
    // Top
    get alignmentTopClass() {
        return this.align === "top";
    }
    get alignmentTopLeftClass() {
        return this.align === "top-left";
    }
    get alignmentTopRightClass() {
        return this.align === "top-right";
    }
    // Bottom
    get alignmentBottomClass() {
        return this.align === "bottom";
    }
    get alignmentBottomLeftClass() {
        return this.align === "bottom-left";
    }
    get alignmentBottomRightClass() {
        return this.align === "bottom-right";
    }
    // Left
    get alignmentLeftClass() {
        return this.align === "left";
    }
    get alignmentLeftTopClass() {
        return this.align === "left-top";
    }
    get alignmentLeftBottomClass() {
        return this.align === "left-bottom";
    }
    // Right
    get alignmentRightClass() {
        return this.align === "right";
    }
    get alignmentRightTopClass() {
        return this.align === "right-top";
    }
    get alignmentRightBottomClass() {
        return this.align === "right-bottom";
    }
    handleChange(open, event) {
        if (this.isOpen !== open) {
            this.isOpenChange.emit(open);
        }
        if (open) {
            this.onOpen.emit(event);
        }
        else {
            this.onClose.emit(event);
        }
        this.isOpen = open;
    }
}
PopoverContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: PopoverContainer, deps: [], target: i0.ɵɵFactoryTarget.Directive });
PopoverContainer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.3.0", type: PopoverContainer, selector: "[cdsPopover], [ibmPopover]", inputs: { caret: "caret", dropShadow: "dropShadow", highContrast: "highContrast", isOpen: "isOpen", align: "align" }, outputs: { onClose: "onClose", onOpen: "onOpen", isOpenChange: "isOpenChange" }, host: { properties: { "class.cds--popover--top": "this.alignmentTopClass", "class.cds--popover--top-left": "this.alignmentTopLeftClass", "class.cds--popover--top-right": "this.alignmentTopRightClass", "class.cds--popover--bottom": "this.alignmentBottomClass", "class.cds--popover--bottom-left": "this.alignmentBottomLeftClass", "class.cds--popover--bottom-right": "this.alignmentBottomRightClass", "class.cds--popover--left": "this.alignmentLeftClass", "class.cds--popover--left-top": "this.alignmentLeftTopClass", "class.cds--popover--left-bottom": "this.alignmentLeftBottomClass", "class.cds--popover--right": "this.alignmentRightClass", "class.cds--popover--right-top": "this.alignmentRightTopClass", "class.cds--popover--right-bottom": "this.alignmentRightBottomClass", "class.cds--popover--caret": "this.caret", "class.cds--popover--drop-shadow": "this.dropShadow", "class.cds--popover--high-contrast": "this.highContrast", "class.cds--popover--open": "this.isOpen", "class.cds--popover-container": "this.containerClass" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: PopoverContainer, decorators: [{
            type: Directive,
            args: [{
                    selector: "[cdsPopover], [ibmPopover]"
                }]
        }], propDecorators: { alignmentTopClass: [{
                type: HostBinding,
                args: ["class.cds--popover--top"]
            }], alignmentTopLeftClass: [{
                type: HostBinding,
                args: ["class.cds--popover--top-left"]
            }], alignmentTopRightClass: [{
                type: HostBinding,
                args: ["class.cds--popover--top-right"]
            }], alignmentBottomClass: [{
                type: HostBinding,
                args: ["class.cds--popover--bottom"]
            }], alignmentBottomLeftClass: [{
                type: HostBinding,
                args: ["class.cds--popover--bottom-left"]
            }], alignmentBottomRightClass: [{
                type: HostBinding,
                args: ["class.cds--popover--bottom-right"]
            }], alignmentLeftClass: [{
                type: HostBinding,
                args: ["class.cds--popover--left"]
            }], alignmentLeftTopClass: [{
                type: HostBinding,
                args: ["class.cds--popover--left-top"]
            }], alignmentLeftBottomClass: [{
                type: HostBinding,
                args: ["class.cds--popover--left-bottom"]
            }], alignmentRightClass: [{
                type: HostBinding,
                args: ["class.cds--popover--right"]
            }], alignmentRightTopClass: [{
                type: HostBinding,
                args: ["class.cds--popover--right-top"]
            }], alignmentRightBottomClass: [{
                type: HostBinding,
                args: ["class.cds--popover--right-bottom"]
            }], onClose: [{
                type: Output
            }], onOpen: [{
                type: Output
            }], isOpenChange: [{
                type: Output
            }], caret: [{
                type: HostBinding,
                args: ["class.cds--popover--caret"]
            }, {
                type: Input
            }], dropShadow: [{
                type: HostBinding,
                args: ["class.cds--popover--drop-shadow"]
            }, {
                type: Input
            }], highContrast: [{
                type: HostBinding,
                args: ["class.cds--popover--high-contrast"]
            }, {
                type: Input
            }], isOpen: [{
                type: HostBinding,
                args: ["class.cds--popover--open"]
            }, {
                type: Input
            }], containerClass: [{
                type: HostBinding,
                args: ["class.cds--popover-container"]
            }], align: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcG9wb3Zlci9wb3BvdmVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULFlBQVksRUFDWixXQUFXLEVBQ1gsS0FBSyxFQUNMLE1BQU0sRUFDTixNQUFNLGVBQWUsQ0FBQzs7QUFFdkI7Ozs7R0FJRztBQUlILE1BQU0sT0FBTyxnQkFBZ0I7SUFIN0I7UUF3REM7O1dBRUc7UUFDTyxZQUFPLEdBQXdCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDNUQ7O1dBRUc7UUFDTyxXQUFNLEdBQXdCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDM0Q7O1dBRUc7UUFDTyxpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFXLENBQUM7UUFFRixVQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ1AsZUFBVSxHQUFHLElBQUksQ0FBQztRQUNoQixpQkFBWSxHQUFHLEtBQUssQ0FBQztRQUM5QixXQUFNLEdBQUcsS0FBSyxDQUFDO1FBRXBCLG1CQUFjLEdBQUcsSUFBSSxDQUFDO1FBQzFELFVBQUssR0FHNEIsUUFBUSxDQUFDO0tBY25EO0lBeEZBLE1BQU07SUFDTixJQUE0QyxpQkFBaUI7UUFDNUQsT0FBTyxJQUFJLENBQUMsS0FBSyxLQUFLLEtBQUssQ0FBQztJQUM3QixDQUFDO0lBRUQsSUFBaUQscUJBQXFCO1FBQ3JFLE9BQU8sSUFBSSxDQUFDLEtBQUssS0FBSyxVQUFVLENBQUM7SUFDbEMsQ0FBQztJQUVELElBQWtELHNCQUFzQjtRQUN2RSxPQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssV0FBVyxDQUFDO0lBQ25DLENBQUM7SUFFRCxTQUFTO0lBQ1QsSUFBK0Msb0JBQW9CO1FBQ2xFLE9BQU8sSUFBSSxDQUFDLEtBQUssS0FBSyxRQUFRLENBQUM7SUFDaEMsQ0FBQztJQUVELElBQW9ELHdCQUF3QjtRQUMzRSxPQUFPLElB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ZGluZyxcblx0SW5wdXQsXG5cdE91dHB1dFxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG4vKipcbiAqIEFwcGxpZXMgcG9wb3ZlciBjb250YWluZXIgc3R5bGluZyB0byB0aGUgZWxlbWVudCBpdCBpcyBhcHBsaWVkIHRvLlxuICpcbiAqIFtTZWUgZGVtb10oLi4vLi4vP3BhdGg9L3N0b3J5L2NvbXBvbmVudHMtcG9wb3Zlci0tYmFzaWMpXG4gKi9cbkBEaXJlY3RpdmUoe1xuXHRzZWxlY3RvcjogXCJbY2RzUG9wb3Zlcl0sIFtpYm1Qb3BvdmVyXVwiXG59KVxuZXhwb3J0IGNsYXNzIFBvcG92ZXJDb250YWluZXIge1xuXHQvLyBUb3Bcblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuY2RzLS1wb3BvdmVyLS10b3BcIikgZ2V0IGFsaWdubWVudFRvcENsYXNzKCkge1xuXHRcdHJldHVybiB0aGlzLmFsaWduID09PSBcInRvcFwiO1xuXHR9XG5cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuY2RzLS1wb3BvdmVyLS10b3AtbGVmdFwiKSBnZXQgYWxpZ25tZW50VG9wTGVmdENsYXNzKCkge1xuXHRcdHJldHVybiB0aGlzLmFsaWduID09PSBcInRvcC1sZWZ0XCI7XG5cdH1cblxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLXBvcG92ZXItLXRvcC1yaWdodFwiKSBnZXQgYWxpZ25tZW50VG9wUmlnaHRDbGFzcygpIHtcblx0XHRyZXR1cm4gdGhpcy5hbGlnbiA9PT0gXCJ0b3AtcmlnaHRcIjtcblx0fVxuXG5cdC8vIEJvdHRvbVxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLXBvcG92ZXItLWJvdHRvbVwiKSBnZXQgYWxpZ25tZW50Qm90dG9tQ2xhc3MoKSB7XG5cdFx0cmV0dXJuIHRoaXMuYWxpZ24gPT09IFwiYm90dG9tXCI7XG5cdH1cblxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLXBvcG92ZXItLWJvdHRvbS1sZWZ0XCIpIGdldCBhbGlnbm1lbnRCb3R0b21MZWZ0Q2xhc3MoKSB7XG5cdFx0cmV0dXJuIHRoaXMuYWxpZ24gPT09IFwiYm90dG9tLWxlZnRcIjtcblx0fVxuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmNkcy0tcG9wb3Zlci0tYm90dG9tLXJpZ2h0XCIpIGdldCBhbGlnbm1lbnRCb3R0b21SaWdodENsYXNzKCkge1xuXHRcdHJldHVybiB0aGlzLmFsaWduID09PSBcImJvdHRvbS1yaWdodFwiO1xuXHR9XG5cblx0Ly8gTGVmdFxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLXBvcG92ZXItLWxlZnRcIikgZ2V0IGFsaWdubWVudExlZnRDbGFzcygpIHtcblx0XHRyZXR1cm4gdGhpcy5hbGlnbiA9PT0gXCJsZWZ0XCI7XG5cdH1cblxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLXBvcG92ZXItLWxlZnQtdG9wXCIpIGdldCBhbGlnbm1lbnRMZWZ0VG9wQ2xhc3MoKSB7XG5cdFx0cmV0dXJuIHRoaXMuYWxpZ24gPT09IFwibGVmdC10b3BcIjtcblx0fVxuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmNkcy0tcG9wb3Zlci0tbGVmdC1ib3R0b21cIikgZ2V0IGFsaWdubWVudExlZnRCb3R0b21DbGFzcygpIHtcblx0XHRyZXR1cm4gdGhpcy5hbGlnbiA9PT0gXCJsZWZ0LWJvdHRvbVwiO1xuXHR9XG5cblx0Ly8gUmlnaHRcblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuY2RzLS1wb3BvdmVyLS1yaWdodFwiKSBnZXQgYWxpZ25tZW50UmlnaHRDbGFzcygpIHtcblx0XHRyZXR1cm4gdGhpcy5hbGlnbiA9PT0gXCJyaWdodFwiO1xuXHR9XG5cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuY2RzLS1wb3BvdmVyLS1yaWdodC10b3BcIikgZ2V0IGFsaWdubWVudFJpZ2h0VG9wQ2xhc3MoKSB7XG5cdFx0cmV0dXJuIHRoaXMuYWxpZ24gPT09IFwicmlnaHQtdG9wXCI7XG5cdH1cblxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLXBvcG92ZXItLXJpZ2h0LWJvdHRvbVwiKSBnZXQgYWxpZ25tZW50UmlnaHRCb3R0b21DbGFzcygpIHtcblx0XHRyZXR1cm4gdGhpcy5hbGlnbiA9PT0gXCJyaWdodC1ib3R0b21cIjtcblx0fVxuXG5cdC8qKlxuXHQgKiBFbWl0cyBhbiBldmVudCB3aGVuIHRoZSBkaWFsb2cgaXMgY2xvc2VkXG5cdCAqL1xuXHRAT3V0cHV0KCkgb25DbG9zZTogRXZlbnRFbWl0dGVyPEV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblx0LyoqXG5cdCAqIEVtaXRzIGFuIGV2ZW50IHdoZW4gdGhlIGRpYWxvZyBpcyBvcGVuZWRcblx0ICovXG5cdEBPdXRwdXQoKSBvbk9wZW46IEV2ZW50RW1pdHRlcjxFdmVudD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cdC8qKlxuXHQgKiBFbWl0cyBhbiBldmVudCB3aGVuIHRoZSBzdGF0ZSBvZiBgaXNPcGVuYCBjaGFuZ2VzLiBBbGxvd3MgYGlzT3BlbmAgdG8gYmUgZG91YmxlIGJvdW5kXG5cdCAqL1xuXHRAT3V0cHV0KCkgaXNPcGVuQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmNkcy0tcG9wb3Zlci0tY2FyZXRcIikgQElucHV0KCkgY2FyZXQgPSB0cnVlO1xuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLXBvcG92ZXItLWRyb3Atc2hhZG93XCIpIEBJbnB1dCgpIGRyb3BTaGFkb3cgPSB0cnVlO1xuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLXBvcG92ZXItLWhpZ2gtY29udHJhc3RcIikgQElucHV0KCkgaGlnaENvbnRyYXN0ID0gZmFsc2U7XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmNkcy0tcG9wb3Zlci0tb3BlblwiKSBASW5wdXQoKSBpc09wZW4gPSBmYWxzZTtcblxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5jZHMtLXBvcG92ZXItY29udGFpbmVyXCIpIGNvbnRhaW5lckNsYXNzID0gdHJ1ZTtcblx0QElucHV0KCkgYWxpZ246IFwidG9wXCIgfCBcInRvcC1sZWZ0XCIgfCBcInRvcC1yaWdodFwiIHxcblx0XHRcImJvdHRvbVwiIHwgXCJib3R0b20tbGVmdFwiIHwgXCJib3R0b20tcmlnaHRcIiB8XG5cdFx0XCJsZWZ0XCIgfCBcImxlZnQtYm90dG9tXCIgfCBcImxlZnQtdG9wXCIgfFxuXHRcdFwicmlnaHRcIiB8IFwicmlnaHQtYm90dG9tXCIgfCBcInJpZ2h0LXRvcFwiID0gXCJib3R0b21cIjtcblxuXHRoYW5kbGVDaGFuZ2Uob3BlbjogYm9vbGVhbiwgZXZlbnQ6IEV2ZW50KSB7XG5cdFx0aWYgKHRoaXMuaXNPcGVuICE9PSBvcGVuKSB7XG5cdFx0XHR0aGlzLmlzT3BlbkNoYW5nZS5lbWl0KG9wZW4pO1xuXHRcdH1cblxuXHRcdGlmIChvcGVuKSB7XG5cdFx0XHR0aGlzLm9uT3Blbi5lbWl0KGV2ZW50KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5vbkNsb3NlLmVtaXQoZXZlbnQpO1xuXHRcdH1cblx0XHR0aGlzLmlzT3BlbiA9IG9wZW47XG5cdH1cbn1cbiJdfQ==