// modules
import { NgModule, SkipSelf, Optional } from "@angular/core";
import { CommonModule } from "@angular/common";
// imports
import { Placeholder } from "./placeholder.component";
import { PlaceholderService } from "./placeholder.service";
import * as i0 from "@angular/core";
// either provides a new instance of PlaceholderService, or returns the parent
export function PLACEHOLDER_SERVICE_PROVIDER_FACTORY(parentService) {
    return parentService || new PlaceholderService();
}
// placeholder service *must* be a singleton to ensure the placeholder viewRef is accessible globally
export const PLACEHOLDER_SERVICE_PROVIDER = {
    provide: PlaceholderService,
    deps: [[new Optional(), new SkipSelf(), PlaceholderService]],
    useFactory: PLACEHOLDER_SERVICE_PROVIDER_FACTORY
};
export class PlaceholderModule {
}
PlaceholderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: PlaceholderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
PlaceholderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.3.0", ngImport: i0, type: PlaceholderModule, declarations: [Placeholder], imports: [CommonModule], exports: [Placeholder] });
PlaceholderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: PlaceholderModule, providers: [PLACEHOLDER_SERVICE_PROVIDER], imports: [CommonModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: PlaceholderModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [Placeholder],
                    exports: [Placeholder],
                    providers: [PLACEHOLDER_SERVICE_PROVIDER],
                    imports: [CommonModule]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhY2Vob2xkZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3BsYWNlaG9sZGVyL3BsYWNlaG9sZGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVO0FBQ1YsT0FBTyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxVQUFVO0FBQ1YsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDOztBQUUzRCw4RUFBOEU7QUFDOUUsTUFBTSxVQUFVLG9DQUFvQyxDQUFDLGFBQWlDO0lBQ3JGLE9BQU8sYUFBYSxJQUFJLElBQUksa0JBQWtCLEVBQUUsQ0FBQztBQUNsRCxDQUFDO0FBRUQscUdBQXFHO0FBQ3JHLE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUFHO0lBQzNDLE9BQU8sRUFBRSxrQkFBa0I7SUFDM0IsSUFBSSxFQUFFLENBQUMsQ0FBQyxJQUFJLFFBQVEsRUFBRSxFQUFFLElBQUksUUFBUSxFQUFFLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztJQUM1RCxVQUFVLEVBQUUsb0NBQW9DO0NBQ2hELENBQUM7QUFRRixNQUFNLE9BQU8saUJBQWlCOzs4R0FBakIsaUJBQWlCOytHQUFqQixpQkFBaUIsaUJBTGIsV0FBVyxhQUdoQixZQUFZLGFBRlosV0FBVzsrR0FJVixpQkFBaUIsYUFIbEIsQ0FBRSw0QkFBNEIsQ0FBRSxZQUNoQyxZQUFZOzJGQUVYLGlCQUFpQjtrQkFON0IsUUFBUTttQkFBQztvQkFDVCxZQUFZLEVBQUUsQ0FBRSxXQUFXLENBQUU7b0JBQzdCLE9BQU8sRUFBRSxDQUFFLFdBQVcsQ0FBRTtvQkFDeEIsU0FBUyxFQUFFLENBQUUsNEJBQTRCLENBQUU7b0JBQzNDLE9BQU8sRUFBRSxDQUFFLFlBQVksQ0FBRTtpQkFDekIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBtb2R1bGVzXG5pbXBvcnQgeyBOZ01vZHVsZSwgU2tpcFNlbGYsIE9wdGlvbmFsIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb21tb25cIjtcblxuLy8gaW1wb3J0c1xuaW1wb3J0IHsgUGxhY2Vob2xkZXIgfSBmcm9tIFwiLi9wbGFjZWhvbGRlci5jb21wb25lbnRcIjtcbmltcG9ydCB7IFBsYWNlaG9sZGVyU2VydmljZSB9IGZyb20gXCIuL3BsYWNlaG9sZGVyLnNlcnZpY2VcIjtcblxuLy8gZWl0aGVyIHByb3ZpZGVzIGEgbmV3IGluc3RhbmNlIG9mIFBsYWNlaG9sZGVyU2VydmljZSwgb3IgcmV0dXJucyB0aGUgcGFyZW50XG5leHBvcnQgZnVuY3Rpb24gUExBQ0VIT0xERVJfU0VSVklDRV9QUk9WSURFUl9GQUNUT1JZKHBhcmVudFNlcnZpY2U6IFBsYWNlaG9sZGVyU2VydmljZSkge1xuXHRyZXR1cm4gcGFyZW50U2VydmljZSB8fCBuZXcgUGxhY2Vob2xkZXJTZXJ2aWNlKCk7XG59XG5cbi8vIHBsYWNlaG9sZGVyIHNlcnZpY2UgKm11c3QqIGJlIGEgc2luZ2xldG9uIHRvIGVuc3VyZSB0aGUgcGxhY2Vob2xkZXIgdmlld1JlZiBpcyBhY2Nlc3NpYmxlIGdsb2JhbGx5XG5leHBvcnQgY29uc3QgUExBQ0VIT0xERVJfU0VSVklDRV9QUk9WSURFUiA9IHtcblx0cHJvdmlkZTogUGxhY2Vob2xkZXJTZXJ2aWNlLFxuXHRkZXBzOiBbW25ldyBPcHRpb25hbCgpLCBuZXcgU2tpcFNlbGYoKSwgUGxhY2Vob2xkZXJTZXJ2aWNlXV0sXG5cdHVzZUZhY3Rvcnk6IFBMQUNFSE9MREVSX1NFUlZJQ0VfUFJPVklERVJfRkFDVE9SWVxufTtcblxuQE5nTW9kdWxlKHtcblx0ZGVjbGFyYXRpb25zOiBbIFBsYWNlaG9sZGVyIF0sXG5cdGV4cG9ydHM6IFsgUGxhY2Vob2xkZXIgXSxcblx0cHJvdmlkZXJzOiBbIFBMQUNFSE9MREVSX1NFUlZJQ0VfUFJPVklERVIgXSxcblx0aW1wb3J0czogWyBDb21tb25Nb2R1bGUgXVxufSlcbmV4cG9ydCBjbGFzcyBQbGFjZWhvbGRlck1vZHVsZSB7IH1cbiJdfQ==