/**
 *
 * carbon-angular v0.0.0 | table-checkbox.component.d.ts
 *
 * Copyright 2014, 2023 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter } from "@angular/core";
import { I18n, Overridable } from "carbon-components-angular/i18n";
import { TableItem } from "../table-item.class";
import { Observable } from "rxjs";
import { TableRowSize } from "../table.types";
import * as i0 from "@angular/core";
export declare class TableCheckbox {
    protected i18n: I18n;
    row: TableItem[];
    selected: boolean;
    name: string;
    get disabled(): boolean;
    /**
     * Size of the table rows.
     */
    size: TableRowSize;
    set label(value: string | Observable<string>);
    get label(): string | Observable<string>;
    /**
     * Used to populate the row selection checkbox label with a useful value if set.
     *
     * Example:
     * ```
     * <cds-table [selectionLabelColumn]="0"></cds-table>
     * <!-- results in aria-label="Select first column value"
     * (where "first column value" is the value of the first column in the row -->
     * ```
     */
    selectionLabelColumn: number;
    skeleton: boolean;
    /**
     * Emits if a single row is selected.
     */
    selectedChange: EventEmitter<any>;
    protected _label: Overridable;
    constructor(i18n: I18n);
    getSelectionLabelValue(row: TableItem[]): {
        value: any;
    };
    getLabel(): Observable<string>;
    static ɵfac: i0.ɵɵFactoryDeclaration<TableCheckbox, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TableCheckbox, "[cdsTableCheckbox], [ibmTableCheckbox]", never, { "row": "row"; "selected": "selected"; "name": "name"; "size": "size"; "label": "label"; "selectionLabelColumn": "selectionLabelColumn"; "skeleton": "skeleton"; }, { "selectedChange": "selectedChange"; }, never, never, false>;
}
