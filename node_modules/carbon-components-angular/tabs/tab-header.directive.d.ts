/**
 *
 * carbon-angular v0.0.0 | tab-header.directive.d.ts
 *
 * Copyright 2014, 2023 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { ElementRef, EventEmitter, AfterViewInit } from "@angular/core";
import { Tab } from "./tab.component";
import * as i0 from "@angular/core";
export declare class TabHeader implements AfterViewInit {
    private host;
    get tabIndex(): 0 | -1;
    get isSelected(): boolean;
    get isDisabled(): boolean;
    /**
     * Set to 'true' to have pane reference cached and not reloaded on tab switching.
     */
    set cacheActive(shouldCache: boolean);
    set paneTabIndex(tabIndex: number | null);
    get cacheActive(): boolean;
    /**
     * Indicates whether the `Tab` is active/selected.
     * Determines whether it's `TabPanel` is rendered.
     */
    active: boolean;
    /**
     * Indicates whether or not the `Tab` item is disabled.
     */
    disabled: boolean;
    type: string;
    ariaSelected: boolean;
    ariaDisabled: boolean;
    navItem: boolean;
    navLink: boolean;
    /**
     * Reference to the corresponsing tab pane.
     */
    paneReference: Tab;
    title: any;
    /**
     * Value 'selected' to be emitted after a new `Tab` is selected.
     */
    selected: EventEmitter<any>;
    protected _cacheActive: boolean;
    constructor(host: ElementRef);
    onClick(): void;
    ngAfterViewInit(): void;
    selectTab(): void;
    focus(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TabHeader, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TabHeader, "[cdsTabHeader], [ibmTabHeader]", never, { "cacheActive": "cacheActive"; "paneTabIndex": "paneTabIndex"; "active": "active"; "disabled": "disabled"; "paneReference": "paneReference"; "title": "title"; }, { "selected": "selected"; }, never, never, false>;
}
