{"version":3,"file":"carbon-components-angular-grid.mjs","sources":["../../src/grid/grid.service.ts","../../src/grid/column.directive.ts","../../src/grid/row.directive.ts","../../src/grid/grid.directive.ts","../../src/grid/grid.module.ts","../../src/grid/carbon-components-angular-grid.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\n@Injectable()\nexport class GridService {\n\tpublic gridObservable: Observable<any | any[]>;\n\tprivate gridSubject = new BehaviorSubject<boolean>(false);\n\tprivate cssGridEnabled = false;\n\n\tconstructor() {\n\t\tthis.gridObservable = this.gridSubject.asObservable();\n\t}\n\n\t/**\n\t * Ping all subscribers to update to use Css Grid\n\t * @param enableCssGrid\n\t */\n\tupdateGridType(enableCssGrid: boolean) {\n\t\tif (this.cssGridEnabled === enableCssGrid) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cssGridEnabled = true;\n\t\tthis.gridSubject.next(enableCssGrid);\n\t}\n}\n","import {\n\tDirective,\n\tHostBinding,\n\tInput,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tOptional\n} from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { GridService } from \"./grid.service\";\n\n@Directive({\n\tselector: \"[cdsCol], [ibmCol]\"\n})\nexport class ColumnDirective implements OnInit, OnChanges, OnDestroy {\n\t@HostBinding(\"class\")\n\tget columnClasses(): string {\n\t\treturn this._columnClasses.join(\" \");\n\t}\n\tset columnClasses(classes: string) {\n\t\tthis._columnClasses = classes.split(\" \");\n\t}\n\n\t@Input() class = \"\";\n\n\t/**\n\t * Defines columns width for specified breakpoint\n\t * Accepts the following formats:\n\t * - {[breakpoint]: number}\n\t * - {[breakpoint]: \"auto\"} - css only\n\t * - {[breakpoint]: {[start|end]: number}} - css only\n\t *\n\t * Example:\n\t * <div cdsCol [columnNumbers]={md: 3, lg: 4}></div>\n\t */\n\t@Input() columnNumbers = {};\n\n\t/**\n\t * Defines columns offset, which increases the left margin of the column.\n\t * This field will only work with flexbox grid.\n\t *\n\t * Accepts the following formats:\n\t * - {[breakpoint]: number}\n\t *\n\t * Example:\n\t * <div cdsCol [offsets]={md: 3, lg: 4}></div>\n\t */\n\t@Input() offsets = {};\n\n\t/**\n\t * Set to `true` to use css grid column hang class\n\t * This will only work when `isCss` property is set to true\n\t *\n\t * Useful when trying to align content across css grid/subgrid\n\t */\n\t@Input() columnHang = false;\n\n\tprotected _columnClasses: string[] = [];\n\n\tprivate isCssGrid = false;\n\tprivate subscription = new Subscription();\n\n\tconstructor(@Optional() private gridService: GridService) {}\n\n\tngOnInit() {\n\t\tif (this.gridService) {\n\t\t\tthis.subscription = this.gridService.gridObservable.subscribe((isCssGrid: boolean) => {\n\t\t\t\tthis.isCssGrid = isCssGrid;\n\t\t\t\tthis.updateColumnClasses();\n\t\t\t});\n\t\t} else {\n\t\t\tthis.updateColumnClasses();\n\t\t}\n\t}\n\n\tngOnChanges() {\n\t\tthis.updateColumnClasses();\n\t}\n\n\t/**\n\t * Unsubscribe from subscription\n\t */\n\tngOnDestroy() {\n\t\tthis.subscription.unsubscribe();\n\t}\n\n\tprivate updateColumnClasses() {\n\t\ttry {\n\t\t\tthis._columnClasses = [];\n\t\t\tconst columnKeys = Object.keys(this.columnNumbers);\n\n\t\t\t// Assign classes based on the type of grid used.\n\t\t\tif (this.isCssGrid) {\n\t\t\t\t// Default css grid class\n\t\t\t\tthis._columnClasses.push(\"cds--css-grid-column\");\n\t\t\t\tif (this.columnHang) {\n\t\t\t\t\tthis._columnClasses.push(\"cds--grid-column-hang\");\n\t\t\t\t}\n\n\t\t\t\tcolumnKeys.forEach(key => {\n\t\t\t\t\t/**\n\t\t\t\t\t * Passing in `auto` to a breakpoint as such: {'md': 'auto'}\n\t\t\t\t\t * will assign the element which will automatically determine the width of the column\n\t\t\t\t\t * for the breakpoint passed\n\t\t\t\t\t */\n\t\t\t\t\tif (this.columnNumbers[key] === \"auto\") {\n\t\t\t\t\t\tthis._columnClasses.push(`cds--${key}:col-span-auto`);\n\t\t\t\t\t} else if (typeof this.columnNumbers[key] === \"object\") {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * In css grid, objects can be passed to the keys in the following format:\n\t\t\t\t\t\t * {'md': {'start': 3}}\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * These objects are used to position the column\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (this.columnNumbers[key][\"start\"]) {\n\t\t\t\t\t\t\t// col-start is simular equivalent of flex offset\n\t\t\t\t\t\t\tthis._columnClasses.push(`cds--${key}:col-start-${this.columnNumbers[key].start}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.columnNumbers[key][\"end\"]) {\n\t\t\t\t\t\t\tthis._columnClasses.push(`cds--${key}:col-end-${this.columnNumbers[key].end}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.columnNumbers[key][\"span\"]) {\n\t\t\t\t\t\t\tthis._columnClasses.push(`cds--${key}:col-span-${this.columnNumbers[key].span}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._columnClasses.push(`cds--${key}:col-span-${this.columnNumbers[key]}`);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.keys(this.offsets).forEach(key => {\n\t\t\t\t\tthis._columnClasses.push(`cds--${key}:col-start${this.offsets[key] + 1}`);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Set column classes for flex grid\n\t\t\t\tif (columnKeys.length <= 0) {\n\t\t\t\t\tthis._columnClasses.push(\"cds--col\");\n\t\t\t\t}\n\n\t\t\t\tcolumnKeys.forEach(key => {\n\t\t\t\t\tif (this.columnNumbers[key] === \"nobreak\") {\n\t\t\t\t\t\tthis._columnClasses.push(`cds--col-${key}`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._columnClasses.push(`cds--col-${key}-${this.columnNumbers[key]}`);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tObject.keys(this.offsets).forEach(key => {\n\t\t\t\t\tthis._columnClasses.push(`cds--offset-${key}-${this.offsets[key]}`);\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error(`Malformed \\`offsets\\` or \\`columnNumbers\\`: ${err}`);\n\t\t}\n\n\t\t/**\n\t\t * Append the classes passed so they aren't overriden when we set the column classes\n\t\t * from host binding\n\t\t */\n\t\tif (this.class) {\n\t\t\tthis._columnClasses.push(this.class);\n\t\t}\n\t}\n}\n","import {\n\tDirective,\n\tHostBinding,\n\tInput\n} from \"@angular/core\";\n\n@Directive({\n\tselector: \"[cdsRow], [ibmRow]\"\n})\nexport class RowDirective {\n\t@HostBinding(\"class.cds--row\") baseClass = true;\n\t@HostBinding(\"class.cds--row--condensed\") @Input() condensed = false;\n\t@HostBinding(\"class.cds--row--narrow\") @Input() narrow = false;\n}\n","import {\n\tContentChildren,\n\tDirective,\n\tHostBinding,\n\tInput,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tQueryList,\n\tSkipSelf\n} from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { GridService } from \"./grid.service\";\n\n/**\n * [See demo](../../?path=/story/components-grid--basic)\n */\n@Directive({\n\tselector: \"[cdsGrid], [ibmGrid]\",\n\tproviders: [\n\t\t{\n\t\t\tprovide: GridService,\n\t\t\tdeps: [[new Optional(), new SkipSelf(), GridService]],\n\t\t\tuseFactory: (parentService: GridService) => {\n\t\t\t\treturn parentService || new GridService();\n\t\t\t}\n\t\t}\n\t]\n})\nexport class GridDirective implements OnInit, OnDestroy {\n\t/**\n\t * Set to `true` to condense the grid\n\t */\n\t@Input() condensed = false;\n\t/**\n\t * Set to `true` to use narrow grid\n\t */\n\t@Input() narrow = false;\n\t/**\n\t * Set to `true` to use the full width\n\t */\n\t@Input() fullWidth = false;\n\t/**\n\t * Set to `true` to use css grid\n\t */\n\t@Input() set useCssGrid(enable: boolean) {\n\t\tthis.cssGridEnabled = enable;\n\t\tthis.gridService.updateGridType(enable);\n\t}\n\n\tprivate cssGridEnabled = false;\n\tprivate isSubgrid = false;\n\tprivate subscription = new Subscription();\n\n\t// Flex grid\n\t@HostBinding(\"class.cds--grid\") get flexGrid() {\n\t\treturn !this.cssGridEnabled;\n\t}\n\t@HostBinding(\"class.cds--grid--condensed\") get flexCondensed() {\n\t\treturn !this.cssGridEnabled && this.condensed;\n\t}\n\t@HostBinding(\"class.cds--grid--narrow\") get flexNarrow() {\n\t\treturn !this.cssGridEnabled && this.narrow;\n\t}\n\t@HostBinding(\"class.cds--grid--full-width\") get flexFullWidth() {\n\t\treturn !this.cssGridEnabled && this.fullWidth;\n\t}\n\n\t// CSS Grid\n\t@HostBinding(\"class.cds--css-grid\") get ccsGrid() {\n\t\treturn this.cssGridEnabled && !this.isSubgrid;\n\t}\n\t@HostBinding(\"class.cds--css-grid--condensed\") get ccsCondensed() {\n\t\treturn this.cssGridEnabled && !this.isSubgrid && this.condensed;\n\t}\n\t@HostBinding(\"class.cds--css-grid--narrow\") get ccsNarrow() {\n\t\treturn this.cssGridEnabled && !this.isSubgrid && this.narrow;\n\t}\n\t@HostBinding(\"class.cds--css-grid--full-width\") get ccsFullWidth() {\n\t\treturn this.cssGridEnabled && !this.isSubgrid && this.fullWidth;\n\t}\n\n\t// CSS Sub Grid\n\t@HostBinding(\"class.cds--subgrid\") get subGrid() {\n\t\treturn this.cssGridEnabled && this.isSubgrid;\n\t}\n\t@HostBinding(\"class.cds--subgrid--condensed\") get subCondensed() {\n\t\treturn this.cssGridEnabled && this.isSubgrid && this.condensed;\n\t}\n\t@HostBinding(\"class.cds--subgrid--narrow\") get subNarrow() {\n\t\treturn this.cssGridEnabled && this.isSubgrid && this.narrow;\n\t}\n\t@HostBinding(\"class.cds--subgrid--wide\") get subFullWidth() {\n\t\treturn this.cssGridEnabled && this.isSubgrid && this.fullWidth;\n\t}\n\n\tconstructor(private gridService: GridService) {}\n\n\tngOnInit() {\n\t\tthis.subscription = this.gridService.gridObservable.subscribe((isCssGrid: boolean) => {\n\t\t\tthis.cssGridEnabled = isCssGrid;\n\t\t});\n\t}\n\n\t// Make all children grids a sub grid\n\t@ContentChildren(GridDirective, { descendants: true }) set cssGridChildren(list: QueryList<GridDirective>) {\n\t\tif (this.cssGridEnabled) {\n\t\t\tlist.forEach((grid) => {\n\t\t\t\t// Prevents initial (parent) grid element from being turned into a subgrid\n\t\t\t\tif (grid === this) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tgrid.isSubgrid = true;\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Unsubscribe from Grid Service subscription\n\t */\n\tngOnDestroy() {\n\t\tthis.subscription.unsubscribe();\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ColumnDirective } from \"./column.directive\";\nimport { RowDirective } from \"./row.directive\";\nimport { GridDirective } from \"./grid.directive\";\nimport { GridService } from \"./grid.service\";\n\n@NgModule({\n\tdeclarations: [\n\t\tColumnDirective,\n\t\tGridDirective,\n\t\tRowDirective\n\t],\n\texports: [\n\t\tColumnDirective,\n\t\tGridDirective,\n\t\tRowDirective\n\t],\n\tproviders: [GridService],\n\timports: [CommonModule]\n})\nexport class GridModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.GridService"],"mappings":"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"}