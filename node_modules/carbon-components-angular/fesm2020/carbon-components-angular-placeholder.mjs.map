{"version":3,"file":"carbon-components-angular-placeholder.mjs","sources":["../../src/placeholder/placeholder.service.ts","../../src/placeholder/placeholder.component.ts","../../src/placeholder/placeholder.module.ts","../../src/placeholder/carbon-components-angular-placeholder.ts"],"sourcesContent":["import {\n\tComponentRef,\n\tViewContainerRef,\n\tInjector\n} from \"@angular/core\";\nimport { Injectable } from \"@angular/core\";\n\n/**\n * Singleton service used to register the container for out-of-flow components to insert into.\n * Also used to insert/remove components from that view.\n */\n@Injectable()\nexport class PlaceholderService {\n\t/**\n\t * Main `ViewContainerRef` to insert components into\n\t */\n\tprotected viewContainerRef: ViewContainerRef = null;\n\t/**\n\t * Map of id's to secondary `ViewContainerRef`s\n\t */\n\tprotected viewContainerMap: Map<any, ViewContainerRef> = new Map();\n\t/**\n\t * Used by `Placeholder` to register view-container reference.\n\t */\n\tregisterViewContainerRef(vcRef: ViewContainerRef, id?: any): void {\n\t\tif (id) {\n\t\t\tthis.viewContainerMap.set(id, vcRef);\n\t\t} else {\n\t\t\tthis.viewContainerRef = vcRef;\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns component in the view.\n\t */\n\tcreateComponent(component: ComponentRef<any>, injector: Injector, id?: any): ComponentRef<any> {\n\t\tif (id) {\n\t\t\tif (!this.viewContainerMap.has(id)) {\n\t\t\t\tconsole.error(`No view container with id ${id} found`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn this.viewContainerMap.get(id).createComponent(component as any, { index: this.viewContainerMap.size, injector });\n\t\t}\n\t\tif (!this.viewContainerRef) {\n\t\t\tconsole.error(\"No view container defined! Likely due to a missing `cds-placeholder`\");\n\t\t\treturn;\n\t\t}\n\t\treturn this.viewContainerRef.createComponent(component as any, { index: this.viewContainerRef.length, injector });\n\t}\n\n\tdestroyComponent(component: ComponentRef<any>) {\n\t\tcomponent.destroy();\n\t}\n\n\thasComponentRef(component: ComponentRef<any>, id?: any) {\n\t\tif (id) {\n\t\t\treturn !(this.viewContainerMap.get(id).indexOf(component.hostView) < 0);\n\t\t}\n\n\t\treturn !(this.viewContainerRef.indexOf(component.hostView) < 0);\n\t}\n\n\thasPlaceholderRef(id?: any) {\n\t\tif (id) {\n\t\t\treturn this.viewContainerMap.has(id);\n\t\t}\n\t\treturn !!this.viewContainerRef;\n\t}\n\n\tappendElement(element: HTMLElement, id?: any): HTMLElement {\n\t\tif (id) {\n\t\t\treturn this.viewContainerMap.get(id).element.nativeElement.appendChild(element);\n\t\t}\n\t\treturn this.viewContainerRef.element.nativeElement.appendChild(element);\n\t}\n\n\tremoveElement(element: HTMLElement, id?: any): HTMLElement {\n\t\tif (id) {\n\t\t\treturn this.viewContainerMap.get(id).element.nativeElement.removeChild(element);\n\t\t}\n\t\treturn this.viewContainerRef.element.nativeElement.removeChild(element);\n\t}\n\n\thasElement(element: HTMLElement, id?: any): boolean {\n\t\tif (id) {\n\t\t\treturn this.viewContainerMap.get(id).element.nativeElement.contains(element);\n\t\t}\n\t\treturn this.viewContainerRef.element.nativeElement.contains(element);\n\t}\n}\n","import {\n\tComponent,\n\tOnInit,\n\tViewContainerRef,\n\tViewChild,\n\tInput\n} from \"@angular/core\";\nimport { PlaceholderService } from \"./placeholder.service\";\n\n/**\n * Using a modal, dialog (Tooltip, OverflowMenu), or any other component that draws out of the normal page flow\n * in your application *requires* this component (`cds-placeholder`).\n * It would generally be placed near the end of your root app component template\n * (app.component.ts or app.component.html) as:\n *\n * ```\n * <cds-placeholder></cds-placeholder>\n * ```\n */\n@Component({\n\tselector: \"cds-placeholder, ibm-placeholder\",\n\ttemplate: `<div #placeholder></div>`\n})\nexport class Placeholder implements OnInit {\n\t@Input() id: any;\n\t/**\n\t * Maintains a reference to the view DOM element of the `Placeholder`.\n\t */\n\t@ViewChild(\"placeholder\", { read: ViewContainerRef, static: true }) viewContainerRef: ViewContainerRef;\n\n\t/**\n\t * Creates an instance of `Placeholder`.\n\t */\n\tconstructor(public placeholderService: PlaceholderService) { }\n\n\t/**\n\t * Registers the components view with `PlaceholderService`\n\t */\n\tngOnInit() {\n\t\t// TODO use `id` to register with the placeholderService\n\t\tthis.placeholderService.registerViewContainerRef(this.viewContainerRef);\n\t}\n}\n","// modules\nimport { NgModule, SkipSelf, Optional } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\n// imports\nimport { Placeholder } from \"./placeholder.component\";\nimport { PlaceholderService } from \"./placeholder.service\";\n\n// either provides a new instance of PlaceholderService, or returns the parent\nexport function PLACEHOLDER_SERVICE_PROVIDER_FACTORY(parentService: PlaceholderService) {\n\treturn parentService || new PlaceholderService();\n}\n\n// placeholder service *must* be a singleton to ensure the placeholder viewRef is accessible globally\nexport const PLACEHOLDER_SERVICE_PROVIDER = {\n\tprovide: PlaceholderService,\n\tdeps: [[new Optional(), new SkipSelf(), PlaceholderService]],\n\tuseFactory: PLACEHOLDER_SERVICE_PROVIDER_FACTORY\n};\n\n@NgModule({\n\tdeclarations: [ Placeholder ],\n\texports: [ Placeholder ],\n\tproviders: [ PLACEHOLDER_SERVICE_PROVIDER ],\n\timports: [ CommonModule ]\n})\nexport class PlaceholderModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.PlaceholderService"],"mappings":"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"}