import * as i0 from '@angular/core';
import { EventEmitter, Directive, HostBinding, Output, Input, Component, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * Applies popover container styling to the element it is applied to.
 *
 * [See demo](../../?path=/story/components-popover--basic)
 */
class PopoverContainer {
    constructor() {
        /**
         * Emits an event when the dialog is closed
         */
        this.onClose = new EventEmitter();
        /**
         * Emits an event when the dialog is opened
         */
        this.onOpen = new EventEmitter();
        /**
         * Emits an event when the state of `isOpen` changes. Allows `isOpen` to be double bound
         */
        this.isOpenChange = new EventEmitter();
        this.caret = true;
        this.dropShadow = true;
        this.highContrast = false;
        this.isOpen = false;
        this.containerClass = true;
        this.align = "bottom";
    }
    // Top
    get alignmentTopClass() {
        return this.align === "top";
    }
    get alignmentTopLeftClass() {
        return this.align === "top-left";
    }
    get alignmentTopRightClass() {
        return this.align === "top-right";
    }
    // Bottom
    get alignmentBottomClass() {
        return this.align === "bottom";
    }
    get alignmentBottomLeftClass() {
        return this.align === "bottom-left";
    }
    get alignmentBottomRightClass() {
        return this.align === "bottom-right";
    }
    // Left
    get alignmentLeftClass() {
        return this.align === "left";
    }
    get alignmentLeftTopClass() {
        return this.align === "left-top";
    }
    get alignmentLeftBottomClass() {
        return this.align === "left-bottom";
    }
    // Right
    get alignmentRightClass() {
        return this.align === "right";
    }
    get alignmentRightTopClass() {
        return this.align === "right-top";
    }
    get alignmentRightBottomClass() {
        return this.align === "right-bottom";
    }
    handleChange(open, event) {
        if (this.isOpen !== open) {
            this.isOpenChange.emit(open);
        }
        if (open) {
            this.onOpen.emit(event);
        }
        else {
            this.onClose.emit(event);
        }
        this.isOpen = open;
    }
}
PopoverContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: PopoverContainer, deps: [], target: i0.ɵɵFactoryTarget.Directive });
PopoverContainer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.3.0", type: PopoverContainer, selector: "[cdsPopover], [ibmPopover]", inputs: { caret: "caret", dropShadow: "dropShadow", highContrast: "highContrast", isOpen: "isOpen", align: "align" }, outputs: { onClose: "onClose", onOpen: "onOpen", isOpenChange: "isOpenChange" }, host: { properties: { "class.cds--popover--top": "this.alignmentTopClass", "class.cds--popover--top-left": "this.alignmentTopLeftClass", "class.cds--popover--top-right": "this.alignmentTopRightClass", "class.cds--popover--bottom": "this.alignmentBottomClass", "class.cds--popover--bottom-left": "this.alignmentBottomLeftClass", "class.cds--popover--bottom-right": "this.alignmentBottomRightClass", "class.cds--popover--left": "this.alignmentLeftClass", "class.cds--popover--left-top": "this.alignmentLeftTopClass", "class.cds--popover--left-bottom": "this.alignmentLeftBottomClass", "class.cds--popover--right": "this.alignmentRightClass", "class.cds--popover--right-top": "this.alignmentRightTopClass", "class.cds--popover--right-bottom": "this.alignmentRightBottomClass", "class.cds--popover--caret": "this.caret", "class.cds--popover--drop-shadow": "this.dropShadow", "class.cds--popover--high-contrast": "this.highContrast", "class.cds--popover--open": "this.isOpen", "class.cds--popover-container": "this.containerClass" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: PopoverContainer, decorators: [{
            type: Directive,
            args: [{
                    selector: "[cdsPopover], [ibmPopover]"
                }]
        }], propDecorators: { alignmentTopClass: [{
                type: HostBinding,
                args: ["class.cds--popover--top"]
            }], alignmentTopLeftClass: [{
                type: HostBinding,
                args: ["class.cds--popover--top-left"]
            }], alignmentTopRightClass: [{
                type: HostBinding,
                args: ["class.cds--popover--top-right"]
            }], alignmentBottomClass: [{
                type: HostBinding,
                args: ["class.cds--popover--bottom"]
            }], alignmentBottomLeftClass: [{
                type: HostBinding,
                args: ["class.cds--popover--bottom-left"]
            }], alignmentBottomRightClass: [{
                type: HostBinding,
                args: ["class.cds--popover--bottom-right"]
            }], alignmentLeftClass: [{
                type: HostBinding,
                args: ["class.cds--popover--left"]
            }], alignmentLeftTopClass: [{
                type: HostBinding,
                args: ["class.cds--popover--left-top"]
            }], alignmentLeftBottomClass: [{
                type: HostBinding,
                args: ["class.cds--popover--left-bottom"]
            }], alignmentRightClass: [{
                type: HostBinding,
                args: ["class.cds--popover--right"]
            }], alignmentRightTopClass: [{
                type: HostBinding,
                args: ["class.cds--popover--right-top"]
            }], alignmentRightBottomClass: [{
                type: HostBinding,
                args: ["class.cds--popover--right-bottom"]
            }], onClose: [{
                type: Output
            }], onOpen: [{
                type: Output
            }], isOpenChange: [{
                type: Output
            }], caret: [{
                type: HostBinding,
                args: ["class.cds--popover--caret"]
            }, {
                type: Input
            }], dropShadow: [{
                type: HostBinding,
                args: ["class.cds--popover--drop-shadow"]
            }, {
                type: Input
            }], highContrast: [{
                type: HostBinding,
                args: ["class.cds--popover--high-contrast"]
            }, {
                type: Input
            }], isOpen: [{
                type: HostBinding,
                args: ["class.cds--popover--open"]
            }, {
                type: Input
            }], containerClass: [{
                type: HostBinding,
                args: ["class.cds--popover-container"]
            }], align: [{
                type: Input
            }] } });

/**
 * [See demo](../../?path=/story/components-popover--basic)
 */
class PopoverContent {
    constructor() {
        this.popoverClass = true;
    }
}
PopoverContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: PopoverContent, deps: [], target: i0.ɵɵFactoryTarget.Component });
PopoverContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: PopoverContent, selector: "cds-popover-content, ibm-popover-content", host: { properties: { "class.cds--popover": "this.popoverClass" } }, ngImport: i0, template: `
		<span class="cds--popover-content">
			<ng-content></ng-content>
		</span>
		<span class="cds--popover-caret"></span>
	`, isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: PopoverContent, decorators: [{
            type: Component,
            args: [{
                    selector: "cds-popover-content, ibm-popover-content",
                    template: `
		<span class="cds--popover-content">
			<ng-content></ng-content>
		</span>
		<span class="cds--popover-caret"></span>
	`
                }]
        }], propDecorators: { popoverClass: [{
                type: HostBinding,
                args: ["class.cds--popover"]
            }] } });

class PopoverModule {
}
PopoverModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: PopoverModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
PopoverModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.3.0", ngImport: i0, type: PopoverModule, declarations: [PopoverContainer,
        PopoverContent], imports: [CommonModule], exports: [PopoverContainer,
        PopoverContent] });
PopoverModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: PopoverModule, imports: [CommonModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: PopoverModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        PopoverContainer,
                        PopoverContent
                    ],
                    exports: [
                        PopoverContainer,
                        PopoverContent
                    ],
                    imports: [CommonModule]
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { PopoverContainer, PopoverContent, PopoverModule };
//# sourceMappingURL=carbon-components-angular-popover.mjs.map
