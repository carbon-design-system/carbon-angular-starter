/**
 *
 * carbon-angular v0.0.0 | contained-list.component.d.ts
 *
 * Copyright 2014, 2023 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { TemplateRef } from "@angular/core";
import { ContainedListKind, ContainedListSize } from "./contained-list.enums";
import * as i0 from "@angular/core";
export declare class ContainedList {
    /** Used to generate unique IDs */
    private static count;
    /**
     * A slot for a possible interactive element to render within the list header.
     */
    action: TemplateRef<any>;
    /**
     * Specify whether the dividing lines in between list items should be inset.
     */
    isInset: boolean;
    /**
     * The kind of ContainedList you want to display.
     */
    kind: ContainedListKind;
    /**
     * A label describing the contained list.
     */
    label: string | TemplateRef<any>;
    /**
     * Specify the size of the contained list.
     */
    size: ContainedListSize;
    /**
     * Label id for the contained list.
     */
    labelId: string;
    /**
     * Exposing ContainedListSize enum to the template
     */
    ContainedListSize: typeof ContainedListSize;
    /**
     * Exposing ContainedListKind enum to the template
     */
    ContainedListKind: typeof ContainedListKind;
    isTemplate(value: string | TemplateRef<any>): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<ContainedList, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ContainedList, "cds-contained-list, ibm-contained-list", never, { "action": "action"; "isInset": "isInset"; "kind": "kind"; "label": "label"; "size": "size"; "labelId": "labelId"; }, {}, never, ["*"], false>;
}
