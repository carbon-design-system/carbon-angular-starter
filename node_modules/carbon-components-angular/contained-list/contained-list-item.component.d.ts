/**
 *
 * carbon-angular v0.0.0 | contained-list-item.component.d.ts
 *
 * Copyright 2014, 2023 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter, TemplateRef } from "@angular/core";
import * as i0 from "@angular/core";
export declare class ContainedListItem {
    /**
     * A slot for a possible interactive element to render within the item.
     */
    action: TemplateRef<any>;
    /**
     * Whether this item is disabled.
     */
    disabled: boolean;
    /**
     * Whether this item is clickable.
     */
    clickable: boolean;
    /**
     * Provide an optional icon to render in front of the item's content.
     *
     * Note that if you intend to use this as a string ref, it's important to remember
     * to register the icon that you wish to add. In this case, it's also worth noting
     * that only icons with a size of 16 are currently supported.
     */
    icon: TemplateRef<any> | string;
    /**
     * Emits click event.
     */
    click: EventEmitter<void>;
    /**
     * Host binding item class.
     */
    itemClass: boolean;
    /**
     * Host binding item role attribute
     */
    role: string;
    /**
     * Host binding clickable item class.
     */
    get itemClickableClass(): boolean;
    /**
     * Host binding item with icon class.
     */
    get itemWithIconClass(): boolean;
    onClick(): void;
    isTemplate(value: string | TemplateRef<any>): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<ContainedListItem, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ContainedListItem, "cds-contained-list-item, ibm-contained-list-item", never, { "action": "action"; "disabled": "disabled"; "clickable": "clickable"; "icon": "icon"; }, { "click": "click"; }, never, ["[ibmContainedListItemButton]", "*"], false>;
}
