/**
 *
 * carbon-angular v0.0.0 | progress-indicator.component.d.ts
 *
 * Copyright 2014, 2023 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter } from "@angular/core";
import { I18n } from "carbon-components-angular/i18n";
import { Step } from "./progress-indicator-step.interface";
import * as i0 from "@angular/core";
/**
 * [See demo](../../?path=/story/components-progress-indicator--basic)
 */
export declare class ProgressIndicator {
    protected i18n: I18n;
    get current(): number;
    set current(current: number);
    static skeletonSteps(stepCount: number): any[];
    steps: Array<Step>;
    stepSelected: EventEmitter<{
        step: Step;
        index: number;
    }>;
    translations: any;
    orientation: "horizontal" | "vertical";
    skeleton: boolean;
    spacing: "default" | "equal";
    readonly statusIcons: {
        current: string;
        complete: string;
        invalid: string;
        incomplete: string;
    };
    private _current;
    constructor(i18n: I18n);
    /**
     * Executes click function if `onClick` exists for step
     * `Current` step functions will not be executed
     * @param index number
     */
    onClick(index: number): void;
    /**
     * Gets current state based on weight of the state
     * Weight of state goes from error, incomplete, current, and complete
     *
     * This function is used to determine which icon & translation string to display
     * @param index number
     * @returns string
     */
    getCurrentState(index: number): "incomplete" | "current" | "invalid" | "complete";
    private setProgressIndicatorStates;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProgressIndicator, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ProgressIndicator, "cds-progress-indicator, ibm-progress-indicator", never, { "current": "current"; "steps": "steps"; "translations": "translations"; "orientation": "orientation"; "skeleton": "skeleton"; "spacing": "spacing"; }, { "stepSelected": "stepSelected"; }, never, never, false>;
}
