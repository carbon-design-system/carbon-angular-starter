/**
 *
 * carbon-angular v0.0.0 | header.component.d.ts
 *
 * Copyright 2014, 2023 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter, TemplateRef } from "@angular/core";
import { DomSanitizer } from "@angular/platform-browser";
import { Router } from "@angular/router";
import { I18n } from "carbon-components-angular/i18n";
import * as i0 from "@angular/core";
/**
 * A fixed header and navigation.
 * Header may contain a Hamburger menu to toggle the side navigation, navigation actions,
 * and global actions (generally in the form of `Panel`s).
 *
 * [See demo](../../?path=/story/components-ui-shell--header)
 */
export declare class Header {
    i18n: I18n;
    protected domSanitizer: DomSanitizer;
    protected router: Router;
    /**
     * ID in the main body content to jump to. Used by keyboard and screen reader users to skip the header content.
     */
    skipTo: string;
    /**
     * Label that shows to the right of the `brand` text. Generally a product name.
     */
    name: string;
    /**
     * Top level branding. Defaults to "IBM"
     */
    brand: string | TemplateRef<any>;
    /**
     * Optional link for the header
     */
    set href(v: string);
    get href(): string;
    /**
     * Array of commands to send to the router when the link is activated
     * See: https://angular.io/api/router/Router#navigate
     */
    route: any[];
    /**
     * Router options. Used in conjunction with `route`
     * See: https://angular.io/api/router/Router#navigate
     */
    routeExtras: any;
    /**
     * Use the routerLink attribute on <a> tag for navigation instead of using event handlers
     */
    useRouter: boolean;
    /**
     * Emits the navigation status promise when the link is activated
     */
    navigation: EventEmitter<Promise<boolean>>;
    protected _href: string;
    constructor(i18n: I18n, domSanitizer: DomSanitizer, router: Router);
    isTemplate(value: any): boolean;
    navigate(event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<Header, [null, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<Header, "cds-header, ibm-header", never, { "skipTo": "skipTo"; "name": "name"; "brand": "brand"; "href": "href"; "route": "route"; "routeExtras": "routeExtras"; "useRouter": "useRouter"; }, { "navigation": "navigation"; }, never, ["cds-hamburger", "*"], false>;
}
