{"version":3,"file":"carbon-components-angular-button.mjs","sources":["../../src/button/button.directive.ts","../../src/button/button-set.component.ts","../../src/button/base-icon-button.component.ts","../../src/button/icon-button.component.ts","../../src/button/button.module.ts","../../src/button/carbon-components-angular-button.ts"],"sourcesContent":["import {\n\tDirective,\n\tHostBinding,\n\tInput\n} from \"@angular/core\";\nimport { ButtonSize, ButtonType } from \"./button.types\";\n\n/**\n * A convenience directive for applying styling to a button.\n *\n * [See demo](../../?path=/story/components-button--basic)\n *\n * Example:\n *\n * ```html\n * <button cdsButton>A button</button>\n * <button cdsButton=\"secondary\">A secondary button</button>\n * ```\n *\n * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/button/code) for more detail.\n */\n@Directive({\n\tselector: \"[cdsButton], [ibmButton]\"\n})\nexport class Button {\n\t/**\n\t * @deprecated as of v5 - Use `cdsButton` input property instead\n\t */\n\t@Input() set ibmButton(type: ButtonType) {\n\t\tthis.cdsButton = type;\n\t}\n\t/**\n\t * Sets the button type\n\t * Accepts `ButtonType` or nothing (empty string which is equivalent to \"primary\")\n\t * Empty string has been added as an option for Angular 16+ to resolve type errors\n\t */\n\t@Input() cdsButton: ButtonType | \"\" = \"primary\";\n\t/**\n\t * Specify the size of the button\n\t */\n\t@Input() size: ButtonSize;\n\t/**\n\t * Set to `true` for a skeleton state button\n\t */\n\t@HostBinding(\"class.cds--skeleton\") @Input() skeleton = false;\n\t/**\n\t * Set to `true` if the button contains only an icon\n\t * This should only be used for creating custom icon buttons, otherwise use\n\t * `<cds-icon-button></cds-icon-button>` component\n\t */\n\t@HostBinding(\"class.cds--btn--icon-only\") @Input() iconOnly = false;\n\n\t/**\n\t * Set to `true` for a \"expressive\" style button\n\t */\n\t@HostBinding(\"class.cds--btn--expressive\") @Input() isExpressive = false;\n\n\t// a whole lot of HostBindings ... this way we don't have to touch the elementRef directly\n\t@HostBinding(\"class.cds--btn\") baseClass = true;\n\t@HostBinding(\"class.cds--btn--primary\") get primaryButton() {\n\t\treturn this.cdsButton === \"primary\" || !this.cdsButton;\n\t}\n\t@HostBinding(\"class.cds--btn--secondary\") get secondaryButton() {\n\t\treturn this.cdsButton === \"secondary\";\n\t}\n\t@HostBinding(\"class.cds--btn--tertiary\") get tertiaryButton() {\n\t\treturn this.cdsButton === \"tertiary\";\n\t}\n\t@HostBinding(\"class.cds--btn--ghost\") get ghostButton() {\n\t\treturn this.cdsButton === \"ghost\";\n\t}\n\t@HostBinding(\"class.cds--btn--danger\") get dangerButton() {\n\t\treturn this.cdsButton === \"danger\" || this.cdsButton === \"danger--primary\";\n\t}\n\t@HostBinding(\"class.cds--btn--danger--tertiary\") get dangerTertiary() {\n\t\treturn this.cdsButton === \"danger--tertiary\";\n\t}\n\t@HostBinding(\"class.cds--btn--danger--ghost\") get dangerGhost() {\n\t\treturn this.cdsButton === \"danger--ghost\";\n\t}\n\t/**\n\t * @todo remove `cds--btn--${size}` classes in v12\n\t */\n\t@HostBinding(\"class.cds--btn--sm\") get smallSize() {\n\t\treturn this.size === \"sm\" && !this.isExpressive;\n\t}\n\t@HostBinding(\"class.cds--btn--md\") get mediumSize() {\n\t\treturn this.size === \"md\" && !this.isExpressive;\n\t}\n\t@HostBinding(\"class.cds--btn--lg\") get largeSize() {\n\t\treturn this.size === \"lg\";\n\t}\n\t@HostBinding(\"class.cds--btn--xl\") get extraLargeSize() {\n\t\treturn this.size === \"xl\";\n\t}\n\t@HostBinding(\"class.cds--btn--2xl\") get twoExtraLargeSize() {\n\t\treturn this.size === \"2xl\";\n\t}\n\n\t// Size classes\n\t@HostBinding(\"class.cds--layout--size-sm\") get smallLayoutSize() {\n\t\treturn this.size === \"sm\" && !this.isExpressive;\n\t}\n\t@HostBinding(\"class.cds--layout--size-md\") get mediumLayoutSize() {\n\t\treturn this.size === \"md\" && !this.isExpressive;\n\t}\n\t@HostBinding(\"class.cds--layout--size-lg\") get largeLayoutSize() {\n\t\treturn this.size === \"lg\";\n\t}\n\t@HostBinding(\"class.cds--layout--size-xl\") get extraLargeLayoutSize() {\n\t\treturn this.size === \"xl\";\n\t}\n\t@HostBinding(\"class.cds--layout--size-2xl\") get twoExtraLargeLayoutSize() {\n\t\treturn this.size === \"2xl\";\n\t}\n\n\n}\n","import { Component, HostBinding } from \"@angular/core\";\n\n@Component({\n\tselector: \"cds-button-set, ibm-button-set\",\n\ttemplate: \"<ng-content></ng-content>\"\n})\nexport class ButtonSet {\n\t@HostBinding(\"class.cds--btn-set\") buttonSetClass = true;\n}\n","import { Component, Input } from \"@angular/core\";\n\n/**\n * Base button with common input properties for configuring icon button.\n * Extend class to inherit @Input meta data\n *\n * Used by pagination nav icon button, code snippet, etc.\n */\n@Component({\n\ttemplate: \"\"\n})\nexport class BaseIconButton {\n\t/**\n\t * Set to `false` to hide caret\n\t */\n\t@Input() caret = true;\n\t/**\n\t * Set to `false` to hide shadow\n\t */\n\t@Input() dropShadow = true;\n\t/**\n\t * Set to `true` to enable high contrast\n\t */\n\t@Input() highContrast = true;\n\t/**\n\t * Set to `true` to have the popover open by default\n\t */\n\t@Input() isOpen = false;\n\t/**\n\t * Set popover alignment\n\t */\n\t@Input() align: \"top\" | \"top-left\" | \"top-right\" |\n\t\t\"bottom\" | \"bottom-left\" | \"bottom-right\" |\n\t\t\"left\" | \"left-bottom\" | \"left-top\" |\n\t\t\"right\" | \"right-bottom\" | \"right-top\" = \"bottom\";\n\t/**\n\t * Set delay before tooltip is shown\n\t */\n\t@Input() enterDelayMs = 100;\n\t/**\n\t * Set delay when tooltip disappears\n\t */\n\t@Input() leaveDelayMs = 300;\n}\n","import {\n\tAfterViewInit,\n\tComponent,\n\tElementRef,\n\tEventEmitter,\n\tInput,\n\tOutput,\n\tRenderer2,\n\tTemplateRef,\n\tViewChild\n} from \"@angular/core\";\nimport { BaseIconButton } from \"./base-icon-button.component\";\nimport { ButtonSize, ButtonType } from \"./button.types\";\n\n@Component({\n\tselector: \"cds-icon-button, ibm-icon-button\",\n\ttemplate: `\n\t<cds-tooltip\n\t\tclass=\"cds--icon-tooltip\"\n\t\t[description]=\"description\"\n\t\t[disabled]=\"disabled\"\n\t\t[caret]=\"caret\"\n\t\t[dropShadow]=\"dropShadow\"\n\t\t[highContrast]=\"highContrast\"\n\t\t[isOpen]=\"isOpen\"\n\t\t[align]=\"align\"\n\t\t[enterDelayMs]=\"enterDelayMs\"\n\t\t[leaveDelayMs]=\"leaveDelayMs\"\n\t\t(click)=\"emitClickEvent($event, 'tooltip')\">\n\t\t<button\n\t\t\t#button\n\t\t\t[id]=\"buttonId\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[attr.type]=\"type\"\n\t\t\t[iconOnly]=\"true\"\n\t\t\t[ngClass]=\"buttonNgClass\"\n\t\t\t[cdsButton]=\"kind\"\n\t\t\t[size]=\"size\"\n\t\t\t[isExpressive]=\"isExpressive\"\n\t\t\t(click)=\"emitClickEvent($event)\"\n\t\t\t(focus)=\"focus.emit($event)\"\n\t\t\t(blur)=\"blur.emit($event)\">\n\t\t\t<ng-content></ng-content>\n\t\t</button>\n\t</cds-tooltip>\n\t`\n})\nexport class IconButton extends BaseIconButton implements AfterViewInit {\n\t/**\n\t * Pass global carbon classes to icon button\n\t */\n\t@Input() set buttonNgClass(obj: { [key: string]: boolean }) {\n\t\tthis.classList = Object.assign({ \"cds--btn--disabled\": this.disabled }, obj);\n\t}\n\n\tget buttonNgClass() {\n\t\treturn this.classList;\n\t}\n\n\t/**\n\t * @param obj: { [key: string]: string\n\t * User can pass additional button attributes if component property does not already exist\n\t * Key is the attribute name & value is the attribute value for the button\n\t */\n\t@Input() set buttonAttributes(obj: { [key: string]: string }) {\n\t\tif (this.button) {\n\t\t\t// Remove old attributes\n\t\t\tObject.keys(this.attributeList).forEach((key: string) => {\n\t\t\t\tthis.renderer.removeAttribute(this.button.nativeElement, key);\n\t\t\t});\n\t\t\t// Set new attributes\n\t\t\tObject.keys(obj).forEach((key: string) => {\n\t\t\t\tthis.renderer.setAttribute(this.button.nativeElement, key, obj[key]);\n\t\t\t});\n\t\t}\n\t\t// Set new attributes\n\t\tthis.attributeList = obj;\n\t}\n\n\tget buttonAttributes() {\n\t\treturn this.buttonAttributes;\n\t}\n\n\tstatic iconButtonCounter = 0;\n\n\t@ViewChild(\"button\") button: ElementRef;\n\n\t/**\n\t * Override id\n\t */\n\t@Input() buttonId = `icon-btn-${IconButton.iconButtonCounter++}`;\n\t/**\n\t * Sets the button type.\n\t */\n\t@Input() kind: ButtonType = \"primary\";\n\t/**\n\t * Specify the size of the button.\n\t */\n\t@Input() size: ButtonSize = \"lg\";\n\t/**\n\t * Set button type, `button` by default\n\t */\n\t@Input() type = \"button\";\n\t/**\n\t * Set to `true` to make button expressive\n\t */\n\t@Input() isExpressive = false;\n\t/**\n\t * Set to `true` to disable button\n\t */\n\t@Input() disabled = false;\n\t/**\n\t * The string or template content to be exposed by the tooltip.\n\t */\n\t@Input() description: string | TemplateRef<any>;\n\n\t/**\n\t * Common button events\n\t */\n\t@Output() click = new EventEmitter<Event>();\n\t@Output() focus = new EventEmitter<Event>();\n\t@Output() blur = new EventEmitter<Event>();\n\t/**\n\t * Event to emit when click event is fired from tooltip\n\t */\n\t@Output() tooltipClick = new EventEmitter<Event>();\n\n\tprivate classList: { [key: string]: boolean } = {};\n\tprivate attributeList: { [key: string]: string } = {};\n\n\tconstructor(private renderer: Renderer2) {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit(): void {\n\t\t// Set attributes once element is found\n\t\tthis.buttonAttributes = this.attributeList;\n\t}\n\n\t/**\n\t * Stop propogation of click event\n\t * Else double fires (click) event\n\t */\n\temitClickEvent(event, element: \"tooltip\" | \"button\" = \"button\") {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\t// Prevents (click) event from bubbling since it would appear user clicked the `button`\n\t\tif (element === \"tooltip\") {\n\t\t\tthis.tooltipClick.emit(event);\n\t\t\treturn;\n\t\t}\n\t\tthis.click.emit(event);\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { Button } from \"./button.directive\";\nimport { ButtonSet } from \"./button-set.component\";\nimport { BaseIconButton } from \"./base-icon-button.component\";\nimport { IconButton } from \"./icon-button.component\";\n\nimport { TooltipModule } from \"carbon-components-angular/tooltip\";\n\n@NgModule({\n\tdeclarations: [\n\t\tButton,\n\t\tButtonSet,\n\t\tBaseIconButton,\n\t\tIconButton\n\t],\n\texports: [\n\t\tButton,\n\t\tButtonSet,\n\t\tIconButton\n\t],\n\timports: [CommonModule, TooltipModule]\n})\nexport class ButtonModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i3.Button"],"mappings":"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"}