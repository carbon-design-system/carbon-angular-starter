/**
 *
 * carbon-angular v0.0.0 | context-menu-item.component.d.ts
 *
 * Copyright 2014, 2023 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter, ElementRef, OnInit, AfterContentInit, OnDestroy } from "@angular/core";
import { ContextMenuSelectionService } from "./context-menu-selection.service";
import { ContextMenuComponent } from "./context-menu.component";
import * as i0 from "@angular/core";
export declare class ContextMenuItemComponent implements OnInit, AfterContentInit, OnDestroy {
    protected elementRef: ElementRef;
    protected contextMenuSelectionService: ContextMenuSelectionService;
    optionClass: boolean;
    role: string;
    tabindex: number;
    ariaHasPopup: any;
    ariaExpanded: any;
    get ariaChecked(): boolean;
    label: string;
    info: string;
    type: null | "checkbox" | "radio";
    checked: boolean;
    icon: string;
    value: string;
    checkedChange: EventEmitter<boolean>;
    hasChildren: boolean;
    selectable: boolean;
    childContextMenu: ContextMenuComponent;
    private subscriptions;
    constructor(elementRef: ElementRef, contextMenuSelectionService: ContextMenuSelectionService);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    handleClick(event: MouseEvent & KeyboardEvent): void;
    handleSelection(selected: boolean): void;
    openSubMenu(): void;
    closeSubMenu(): void;
    handleMouseOver(): void;
    handleMouseOut(): void;
    handleFocus(): void;
    handleBlur(): void;
    focusItem(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ContextMenuItemComponent, [null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ContextMenuItemComponent, "cds-context-menu-item, ibm-context-menu-item", never, { "label": "label"; "info": "info"; "type": "type"; "checked": "checked"; "icon": "icon"; "value": "value"; }, { "checkedChange": "checkedChange"; }, ["childContextMenu"], ["*"], false>;
}
