/**
 *
 * carbon-angular v0.0.0 | selection-tile.component.d.ts
 *
 * Copyright 2014, 2023 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter, AfterViewInit } from "@angular/core";
import { I18n } from "carbon-components-angular/i18n";
import * as i0 from "@angular/core";
export declare class SelectionTile implements AfterViewInit {
    i18n: I18n;
    static tileCount: number;
    /**
     * @deprecated since v5 - Use `cdsLayer` directive instead
     * Set to `"light"` to apply the light style
     */
    theme: "light" | "dark";
    /**
     * The unique id for the input.
     */
    id: string;
    /**
     * Updating the state of the input to match the state of the parameter passed in.
     * Set to `true` if this tile should be selected.
     */
    set selected(value: boolean);
    get selected(): boolean;
    /**
     * The value for the tile. Returned via `ngModel` or `selected` event on the containing `TileGroup`.
     */
    value: string;
    /**
     * Internal event used to notify the containing `TileGroup` of changes.
     */
    change: EventEmitter<Event>;
    /**
     * Set to `true` to disable the selection tile.
     */
    disabled: boolean;
    /**
     * Set by the containing `TileGroup`. Used for the `name` property on the input.
     */
    name: string;
    /**
     * Defines whether or not the `SelectionTile` supports selecting multiple tiles as opposed to single
     * tile selection.
     */
    multiple: boolean;
    input: any;
    protected _selected: any;
    constructor(i18n: I18n);
    ngAfterViewInit(): void;
    keyboardInput(event: any): void;
    onChange(event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SelectionTile, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SelectionTile, "cds-selection-tile, ibm-selection-tile", never, { "theme": "theme"; "id": "id"; "selected": "selected"; "value": "value"; "disabled": "disabled"; }, { "change": "change"; }, never, ["*"], false>;
}
