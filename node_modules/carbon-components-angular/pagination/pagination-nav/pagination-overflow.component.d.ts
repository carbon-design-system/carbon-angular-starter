/**
 *
 * carbon-angular v0.0.0 | pagination-overflow.component.d.ts
 *
 * Copyright 2014, 2023 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter } from "@angular/core";
import { I18n } from "carbon-components-angular/i18n";
import * as i0 from "@angular/core";
/**
 * Used to present a selection of pages when there is an overflow
 * in the pagination list
 *
 * * ```html
 * <cds-pagination-overflow [fromIndex]="5" [count]="30" (change)="handleChange(value)"></cds-pagination-overflow>
 * ```
 */
export declare class PaginationOverflow {
    protected i18n: I18n;
    /**
     * The page for this component to dipslay
     */
    fromIndex: number;
    count: number;
    ariaLabel: string;
    /**
     * Emits click event
     */
    change: EventEmitter<number>;
    get countAsArray(): any[];
    constructor(i18n: I18n);
    handleChange(event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PaginationOverflow, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PaginationOverflow, "cds-pagination-overflow, ibm-pagination-overflow", never, { "fromIndex": "fromIndex"; "count": "count"; "ariaLabel": "ariaLabel"; }, { "change": "change"; }, never, never, false>;
}
