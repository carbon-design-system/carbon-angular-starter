/**
 *
 * carbon-angular v0.0.0 | tag-filter.component.d.ts
 *
 * Copyright 2014, 2023 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter } from "@angular/core";
import { Tag } from "./tag.component";
import * as i0 from "@angular/core";
export declare class TagFilter extends Tag {
    closeButtonLabel: string;
    disabled: boolean;
    title: string;
    /**
     * Function for close/delete the tag
     */
    close: EventEmitter<any>;
    /**
     * We need to stop the immedate propagation of click on the close button
     * to prevent undesired effects when used within dialogs.
     *
     * We need to emit a click event on close to allow for clicks to be listened
     * to on the immediate close button element. `action` distinguishes between clicks on
     * the tag vs. clicks on the close button.
     */
    click: EventEmitter<{
        action: "click" | "close";
    }>;
    onClick(event: any): void;
    onClose(event: any): void;
    get attrClass(): string;
    get attrAriaLabel(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<TagFilter, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TagFilter, "cds-tag-filter, ibm-tag-filter", never, { "closeButtonLabel": "closeButtonLabel"; "disabled": "disabled"; "title": "title"; }, { "close": "close"; "click": "click"; }, never, ["*"], false>;
}
