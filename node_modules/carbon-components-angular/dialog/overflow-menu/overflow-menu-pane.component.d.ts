/**
 *
 * carbon-angular v0.0.0 | overflow-menu-pane.component.d.ts
 *
 * Copyright 2014, 2023 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { ElementRef, AfterViewInit } from "@angular/core";
import { Dialog } from "../dialog.component";
import { I18n } from "carbon-components-angular/i18n";
import { ExperimentalService } from "carbon-components-angular/experimental";
import { AnimationFrameService, ElementService } from "carbon-components-angular/utils";
import * as i0 from "@angular/core";
/**
 * Extend the `Dialog` component to create an overflow menu.
 *
 * Not used directly. See overflow-menu.component and overflow-menu.directive for more
 */
export declare class OverflowMenuPane extends Dialog implements AfterViewInit {
    protected elementRef: ElementRef;
    protected i18n: I18n;
    protected experimental: ExperimentalService;
    protected animationFrameService: AnimationFrameService;
    protected elementService: ElementService;
    constructor(elementRef: ElementRef, i18n: I18n, experimental: ExperimentalService, animationFrameService?: AnimationFrameService, elementService?: ElementService);
    onDialogInit(): void;
    hostkeys(event: KeyboardEvent): void;
    onClose(event: any): void;
    afterDialogViewInit(): void;
    protected listItems(): HTMLElement[];
    static ɵfac: i0.ɵɵFactoryDeclaration<OverflowMenuPane, [null, null, null, { optional: true; }, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<OverflowMenuPane, "cds-overflow-menu-pane, ibm-overflow-menu-pane", never, {}, {}, never, never, false>;
}
